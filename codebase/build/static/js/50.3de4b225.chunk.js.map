{"version":3,"sources":["@core/components/wizard/index.js","views/forms/wizard/steps/Address.js","views/forms/wizard/steps/SocialLinks.js","views/forms/wizard/steps/PersonalInfo.js","views/forms/wizard/steps/AccountDetails.js","views/forms/wizard/WizardModern.js","views/forms/wizard/WizardVertical.js","views/forms/wizard/steps-with-validation/Address.js","views/forms/wizard/steps-with-validation/SocialLinks.js","views/forms/wizard/steps-with-validation/PersonalInfo.js","views/forms/wizard/steps-with-validation/AccountDetails.js","views/forms/wizard/WizardHorizontal.js","views/forms/wizard/WizardModernVertical.js","views/forms/wizard/index.js","@core/components/breadcrumbs/index.js"],"names":["Wizard","forwardRef","props","ref","type","className","steps","separator","options","instance","useState","activeIndex","setActiveIndex","stepper","useEffect","Stepper","current","addEventListener","event","detail","indexStep","classnames","map","step","index","length","crossed","active","id","icon","title","subtitle","content","defaultProps","size","Address","Form","onSubmit","e","preventDefault","Row","FormGroup","tag","Col","md","Label","for","Input","name","placeholder","Button","Ripple","color","onClick","previous","next","SocialLinks","alert","PersonalInfo","countryOptions","value","label","theme","selectThemeColors","isClearable","classNamePrefix","defaultValue","isMulti","AccountDetails","outline","disabled","WizardModern","setStepper","useRef","linear","el","WizardVertical","useForm","register","errors","handleSubmit","trigger","isObjEmpty","innerRef","required","SignupSchema","yup","shape","email","oneOf","resolver","yupResolver","WizardHorizontal","WizardModernVertical","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","right","Link"],"mappings":"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","file":"static/js/50.3de4b225.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type='button' className='step-trigger'>\r\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\r\n              <span className='bs-stepper-label'>\r\n                <span className='bs-stepper-title'>{step.title}</span>\r\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className='bs-stepper-header'>{renderHeader()}</div>\r\n      <div className='bs-stepper-content'>{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />,\r\n  options: {}\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n","import { Fragment } from 'react'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Input, Form, Button } from 'reactstrap'\r\n\r\nconst Address = ({ stepper, type }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Address</h5>\r\n        <small>Enter Your Address.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`address-${type}`}>\r\n              Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`address-${type}`}\r\n              name={`address-${type}`}\r\n              placeholder='98  Borough bridge Road, Birmingham'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`landmark-${type}`}>\r\n              Landmark\r\n            </Label>\r\n            <Input type='text' name={`landmark-${type}`} id={`landmark-${type}`} placeholder='Borough bridge' />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`pincode-${type}`}>\r\n              Pincode\r\n            </Label>\r\n            <Input type='text' name={`pincode-${type}`} id={`pincode-${type}`} placeholder='658921' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`city-${type}`}>\r\n              City\r\n            </Label>\r\n            <Input type='text' name={`city-${type}`} id={`city-${type}`} placeholder='Birmingham' />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='primary' className='btn-next' onClick={() => stepper.next()}>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","import { Fragment } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Form, Input, Button } from 'reactstrap'\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Social Links</h5>\r\n        <small>Enter Your Social Links.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`twitter-${type}`}>\r\n              Twitter\r\n            </Label>\r\n            <Input type='text' id={`twitter-${type}`} name='twitter' placeholder='https://twitter.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`facebook-${type}`}>\r\n              Facebook\r\n            </Label>\r\n            <Input type='text' id={`facebook-${type}`} name='facebook' placeholder='https://facebook.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`google-${type}`}>\r\n              Google+\r\n            </Label>\r\n            <Input type='text' id={`google-${type}`} name='google' placeholder='https://plus.google.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`linkedin-${type}`}>\r\n              Linkedin\r\n            </Label>\r\n            <Input type='text' id={`linkedin-${type}`} name='linkedin' placeholder='https://linkedin.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='success' className='btn-submit' onClick={() => alert('submitted')}>\r\n            Submit\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SocialLinks\r\n","import { Fragment } from 'react'\r\nimport Select from 'react-select'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Label, FormGroup, Row, Col, Form, Input, Button } from 'reactstrap'\r\n\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst PersonalInfo = ({ stepper, type }) => {\r\n  const countryOptions = [\r\n    { value: 'UK', label: 'UK' },\r\n    { value: 'USA', label: 'USA' },\r\n    { value: 'Spain', label: 'Spain' },\r\n    { value: 'France', label: 'France' },\r\n    { value: 'Italy', label: 'Italy' },\r\n    { value: 'Australia', label: 'Australia' }\r\n  ]\r\n\r\n  const languageOptions = [\r\n    { value: 'English', label: 'English' },\r\n    { value: 'French', label: 'French' },\r\n    { value: 'Spanish', label: 'Spanish' },\r\n    { value: 'Italian', label: 'Italian' },\r\n    { value: 'Japanese', label: 'Japanese' }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Personal Info</h5>\r\n        <small>Enter Your Personal Info.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`first-name-${type}`}>\r\n              First Name\r\n            </Label>\r\n            <Input type='text' name='first-name' id={`first-name-${type}`} placeholder='John' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`last-name-${type}`}>\r\n              Last Name\r\n            </Label>\r\n            <Input type='text' name='last-name' id={`last-name-${type}`} placeholder='Doe' />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`country-${type}`}>\r\n              Country\r\n            </Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              id={`country-${type}`}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={countryOptions}\r\n              defaultValue={countryOptions[0]}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`language-${type}`}>\r\n              Language\r\n            </Label>\r\n            <Select\r\n              isMulti\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              id={`language-${type}`}\r\n              options={languageOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='primary' className='btn-next' onClick={() => stepper.next()}>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import { Fragment } from 'react'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Input, Form, Button } from 'reactstrap'\r\n\r\nconst AccountDetails = ({ stepper, type }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Account Details</h5>\r\n        <small className='text-muted'>Enter Your Account Details.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`username-${type}`}>\r\n              Username\r\n            </Label>\r\n            <Input type='text' name={`username-${type}`} id={`username-${type}`} placeholder='johndoe' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`email-${type}`}>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              name={`email-${type}`}\r\n              id={`email-${type}`}\r\n              placeholder='john.doe@email.com'\r\n              aria-label='john.doe'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`password-${type}`}>\r\n              Password\r\n            </Label>\r\n            <Input type='password' id={`password-${type}`} />\r\n          </div>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`confirm-password-${type}`}>\r\n              Confirm Password\r\n            </Label>\r\n            <Input type='password' id={`confirm-password-${type}`} />\r\n          </div>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='secondary' className='btn-prev' outline disabled>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='primary' className='btn-next' onClick={() => stepper.next()}>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetails\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\nimport { FileText, User, MapPin, Link } from 'react-feather'\r\n\r\nconst WizardModern = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      icon: <FileText size={18} />,\r\n      content: <AccountDetails stepper={stepper} type='wizard-modern' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      icon: <User size={18} />,\r\n      content: <PersonalInfo stepper={stepper} type='wizard-modern' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      icon: <MapPin size={18} />,\r\n      content: <Address stepper={stepper} type='wizard-modern' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      icon: <Link size={18} />,\r\n      content: <SocialLinks stepper={stepper} type='wizard-modern' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='modern-horizontal-wizard'>\r\n      <Wizard\r\n        type='modern-horizontal'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardModern\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\n\r\nconst WizardVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      content: <Address stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      content: <SocialLinks stepper={stepper} type='wizard-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='vertical-wizard'>\r\n      <Wizard\r\n        type='vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardVertical\r\n","import { Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nconst Address = ({ stepper, type }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Address</h5>\r\n        <small>Enter Your Address.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`address-${type}`}>\r\n              Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`address-${type}`}\r\n              name={`address-${type}`}\r\n              placeholder='98  Borough bridge Road, Birmingham'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`address-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`landmark-${type}`}>\r\n              Landmark\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`landmark-${type}`}\r\n              id={`landmark-${type}`}\r\n              placeholder='Borough bridge'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`landmark-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`pincode-${type}`}>\r\n              Pincode\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`pincode-${type}`}\r\n              id={`pincode-${type}`}\r\n              placeholder='658921'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`pincode-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`city-${type}`}>\r\n              City\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`city-${type}`}\r\n              id={`city-${type}`}\r\n              placeholder='Birmingham'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`city-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev'>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","import { Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      alert('submitted')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Social Links</h5>\r\n        <small>Enter Your Social Links.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`twitter-${type}`}>\r\n              Twitter\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`twitter-${type}`}\r\n              name={`twitter-${type}`}\r\n              placeholder='https://twitter.com/abc'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`twitter-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`facebook-${type}`}>\r\n              Facebook\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`facebook-${type}`}\r\n              name={`facebook-${type}`}\r\n              placeholder='https://facebook.com/abc'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`facebook-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`google-${type}`}>\r\n              Google+\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`google-${type}`}\r\n              name={`google-${type}`}\r\n              placeholder='https://plus.google.com/abc'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`google-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for='linkedin'>\r\n              Linkedin\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`linkedin-${type}`}\r\n              name={`linkedin-${type}`}\r\n              placeholder='https://linkedin.com/abc'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`linkedin-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='success' className='btn-submit'>\r\n            Submit\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SocialLinks\r\n","import { Fragment } from 'react'\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { selectThemeColors, isObjEmpty } from '@utils'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst PersonalInfo = ({ stepper, type }) => {\r\n  const { register, errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  const countryOptions = [\r\n    { value: 'UK', label: 'UK' },\r\n    { value: 'USA', label: 'USA' },\r\n    { value: 'Spain', label: 'Spain' },\r\n    { value: 'France', label: 'France' },\r\n    { value: 'Italy', label: 'Italy' },\r\n    { value: 'Australia', label: 'Australia' }\r\n  ]\r\n\r\n  const languageOptions = [\r\n    { value: 'English', label: 'English' },\r\n    { value: 'French', label: 'French' },\r\n    { value: 'Spanish', label: 'Spanish' },\r\n    { value: 'Italian', label: 'Italian' },\r\n    { value: 'Japanese', label: 'Japanese' }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Personal Info</h5>\r\n        <small>Enter Your Personal Info.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`first-name-${type}`}>\r\n              First Name\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`first-name-${type}`}\r\n              id={`first-name-${type}`}\r\n              placeholder='John'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`first-name-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`last-name-${type}`}>\r\n              Last Name\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`last-name-${type}`}\r\n              id={`last-name-${type}`}\r\n              placeholder='Doe'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`last-name-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`country-${type}`}>\r\n              Country\r\n            </Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              id={`country-${type}`}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={countryOptions}\r\n              defaultValue={countryOptions[0]}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`language-${type}`}>\r\n              Language\r\n            </Label>\r\n            <Select\r\n              isMulti\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              id={`language-${type}`}\r\n              options={languageOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import * as yup from 'yup'\r\nimport { Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Label, Input, FormGroup, Row, Col, Button } from 'reactstrap'\r\n\r\nconst AccountDetails = ({ stepper, type }) => {\r\n  const SignupSchema = yup.object().shape({\r\n    [`username-${type}`]: yup.string().required(),\r\n    [`email-${type}`]: yup.string().email().required(),\r\n    [`password-val-${type}`]: yup.string().required(),\r\n    'confirm-password-val': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`password-val-${type}`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { register, errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Account Details</h5>\r\n        <small className='text-muted'>Enter Your Account Details.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`username-${type}`}>\r\n              Username\r\n            </Label>\r\n            <Input\r\n              name={`username-${type}`}\r\n              id={`username-${type}`}\r\n              placeholder='johndoe'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`username-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`email-${type}`}>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              name={`email-${type}`}\r\n              id={`email-${type}`}\r\n              placeholder='john.doe@email.com'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`email-${type}`] })}\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`password-val-${type}`}>\r\n              Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name={`password-val-${type}`}\r\n              id={`password-val-${type}`}\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors[`password-val-${type}`] })}\r\n            />\r\n          </div>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for='confirm-password-val'>\r\n              Confirm Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name='confirm-password-val'\r\n              id='confirm-password-val'\r\n              innerRef={register({ required: true })}\r\n              className={classnames({ 'is-invalid': errors['confirm-password-val'] })}\r\n            />\r\n          </div>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='secondary' className='btn-prev' outline disabled>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetails\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport { ArrowRight } from 'react-feather'\r\nimport Address from './steps-with-validation/Address'\r\nimport SocialLinks from './steps-with-validation/SocialLinks'\r\nimport PersonalInfo from './steps-with-validation/PersonalInfo'\r\nimport AccountDetails from './steps-with-validation/AccountDetails'\r\n\r\nconst WizardHorizontal = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      content: <Address stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      content: <SocialLinks stepper={stepper} type='wizard-horizontal' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='horizontal-wizard'>\r\n      <Wizard instance={el => setStepper(el)} ref={ref} steps={steps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardHorizontal\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\nimport { FileText, User, MapPin, Link } from 'react-feather'\r\n\r\nconst WizardModernVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      icon: <FileText size={18} />,\r\n      content: <AccountDetails stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      icon: <User size={18} />,\r\n      content: <PersonalInfo stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      icon: <MapPin size={18} />,\r\n      content: <Address stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      icon: <Link size={18} />,\r\n      content: <SocialLinks stepper={stepper} type='modern-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='modern-vertical-wizard'>\r\n      <Wizard\r\n        type='modern-vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardModernVertical\r\n","import { Fragment } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport WizardModern from './WizardModern'\r\nimport WizardVertical from './WizardVertical'\r\nimport WizardHorizontal from './WizardHorizontal'\r\nimport WizardModernVertical from './WizardModernVertical'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\nconst Wizard = () => {\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Form Wizard' breadCrumbParent='Form' breadCrumbActive='Form Wizard' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <WizardHorizontal />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <WizardVertical />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <WizardModern />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <WizardModernVertical />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Wizard\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}