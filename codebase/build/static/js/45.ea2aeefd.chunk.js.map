{"version":3,"sources":["views/apps/ecommerce/detail/ProductDetails.js","views/apps/ecommerce/detail/RelatedProducts.js","views/apps/ecommerce/detail/index.js","redux/actions/clients/index.js","views/apps/ecommerce/store/actions/index.js"],"names":["Product","props","userData","useSelector","state","auth","properUser","user","useState","details","setDetails","modalOpened","setModalOpened","history","useHistory","data","dispatch","addToCart","PriceDisplay","categories","brand","found","filter","item","title","categoryName","length","value","price","useEffect","a","ref","firestore","collection","doc","get","exists","console","log","name","CartBtnTag","Link","Row","className","Col","md","xs","src","img","alt","Array","fill","map","listItem","index","CardText","detail","size","Button","tag","color","to","type","toLowerCase","outline","onClick","Modal","isOpen","toggle","modalClassName","ModalHeader","ModalBody","ModalFooter","Ripple","deleteProduct","id","then","res","push","RelatedProducts","relatedProds","SwiperCore","use","Navigation","slidesPerView","spaceBetween","navigation","breakpoints","slide","window","scrollTo","top","behavior","Details","productId","useParams","product","relatedProducts","setRelatedProducts","useDispatch","store","ecommerce","allProducts","products","getProduct","getProductsData","newArr","Object","keys","productDetail","Card","CardBody","ProductDetails","params","snap","records","docs","record","SaveCategory","category","add","newCat","newData","UpdateCategory","editID","update","FetchCategories","Categories","DeleteCategory","delete","getProducts","q","queryLowered","includes","total","slug","snapshot","catch","err"],"mappings":"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","file":"static/js/45.ea2aeefd.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect, Fragment } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Star, ShoppingCart, Trash2, DollarSign } from 'react-feather'\r\nimport {\r\n  Row,\r\n  Col,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from 'reactstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { firestore } from '@src/utility/firebase'\r\nimport { deleteProduct } from '../store/actions'\r\nconst Product = props => {\r\n  const { userData } = useSelector(state => state.auth)\r\n  const properUser = userData.user\r\n  const [details, setDetails] = useState({})\r\n  const [modalOpened, setModalOpened] = useState(false)\r\n  const history = useHistory()\r\n  // ** Props\r\n  const { data, dispatch, addToCart } = props\r\n\r\n  useEffect(async () => {\r\n    if (data.brand) {\r\n      const ref = firestore.collection('categories').doc(data.brand)\r\n      const doc = await ref.get()\r\n      if (!doc.exists) {\r\n        console.log('not found user')\r\n      }\r\n      setDetails({ ...data, brand: doc.data() })\r\n    }\r\n  }, [properUser])\r\n\r\n  function PriceDisplay() {\r\n    if (properUser && properUser.categories && details.brand) {\r\n      const found = properUser.categories.filter(\r\n        item => item.title === details.brand.categoryName\r\n      )\r\n      if (found.length > 0) {\r\n        return found[0].value\r\n      } else {\r\n        return details.brand.price\r\n      }\r\n    } else if (details.brand) {\r\n      return details.brand.price\r\n    }\r\n  }\r\n  // ** State\r\n\r\n  // ** Renders color options\r\n\r\n  // ** Handle Move/Add to cart\r\n  const deleteProductMethod = () => {\r\n    dispatch(deleteProduct(details.id)).then(res => {\r\n      history.push('/products')\r\n    })\r\n  }\r\n\r\n  // ** Condition btn tag\r\n  const CartBtnTag = Link\r\n  const textHandler = (name) => {\r\n    if (name === \"TÓNICA LIGHT\") {\r\n      return (\r\n        <p>\r\n          Es un agua tónica de 34 calorías por botella. Ligera y fresca, acompaña perfectamente a los mejores destilados resaltando sus aromas y manteniendo una burbuja pequeña y delicada.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24 <br />\r\n          Caja x 24 (En 4Packs) <br />\r\n          Fourpacks <br />\r\n          Unidades\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"LEMONGRASS\") {\r\n      return (\r\n        <p>\r\n          Es una bebida peruana refrescante, elaborada con un agradable sabor a hierbaluisa y un final cítrico balanceado. Disfrútala sola o acompañando a un pisco de calidad.\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          Caja x 24 <br />\r\n          Caja x 24 (En 4Packs) <br />\r\n          Fourpacks <br />\r\n          Unidades\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"GINGER ALE\") {\r\n      return (\r\n        <p>\r\n          Nuestra Ginger Ale es una bebida peruana que ofrece el equilibrio perfecto de jengibres frescos y un dulzor sutil, de gran aroma y perfecto picor. Disfrútala con los mejores piscos y otros destilados.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24 <br />\r\n          Caja x 24 (En 4Packs) <br />\r\n          Fourpacks <br />\r\n          Unidades\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"TÓNICA DRY\") {\r\n      return (\r\n        <p>\r\n          Del árbol de la quina se producen las mejores aguas tónicas del mundo. Es un agua tónica de carácter seco con dulzor reducido para que tu destilado favorito sea el protagonista de cualquier cóctel.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24 <br />\r\n          Caja x 24 (En 4Packs) <br />\r\n          Fourpacks <br />\r\n          Unidades <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"TÓNICA AMAZÓNICA\") {\r\n      return (\r\n        <p>\r\n          La Tónica Amazónica Mr Perkins, inspirada en la rica selva amazónica, exhibe toques de Camu Camu y Pitahaya que le dan un sabor exótico y único. Combina perfecto con destilados de perfil cítricos, además de ser versátil en combinación con la mayoría de destilados de calidad.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24  <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks <br />\r\n          Unidades  <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"GINGER BEER LIGHT\") {\r\n      return (\r\n        <p>\r\n          Con tan solo 30 calorías por botella, nuestra nueva Ginger Beer Light conserva el intenso sabor de jengibres frescos ofreciendo un equilibrio perfecto de picor y burbuja delicada.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24 <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks  <br />\r\n          Unidades  <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"TÓNICA ORIGINAL\") {\r\n      return (\r\n        <p>\r\n          Del árbol de la Quina, originario del Perú, se producen las mejores aguas tónicas del mundo. Es así como nace Mr. Perkins, Perú-Kina, un agua tónica original, premium, natural y de calidad mundial. <br />\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24  <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks  <br />\r\n          Unidades  <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"TÓNICA BlOSSOM\") {\r\n      return (\r\n        <p>\r\n          Del árbol de la quina; originario del Perú, se producen las mejores aguas tónicas del mundo. Es una agua de aroma y sabor frutal, con notas frutales que harán resaltar a tu destilado preferido. <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24  <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks  <br />\r\n          Unidades  <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"PINK SODA\") {\r\n      return (\r\n        <p>\r\n          Nuestra Pink Soda es una bebida peruana elaborada con selectas toronjas que, junto con notas aromáticas de mandarina, ofrece una perfecta armonía entre ligeramente amargo y muy refrescante.\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24  <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks  <br />\r\n          Unidades  <br />\r\n        </p>\r\n      )\r\n    }\r\n    if (name === \"GINGER BEER\") {\r\n      return (\r\n        <p>\r\n          Nuestra Ginger Beer es una bebida elaborada con el mejor jengibre orgánico del Perú, el cual le brinda un sabor robusto y picante que a la vez es refrescante. Disfrútala sola o como protagonista en un Dark & Stormy o un Pisco Mule.<br />\r\n          <br />\r\n          <br />\r\n          Presentación:\r\n          <br />\r\n          <br />\r\n          Caja x 24  <br />\r\n          Caja x 24 (En 4Packs)  <br />\r\n          Fourpacks  <br />\r\n          Unidades\r\n        </p>\r\n      )\r\n    } else {\r\n      return (\r\n        <p></p>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Row className='my-2'>\r\n      <Col\r\n        className='d-flex align-items-center justify-content-center mb-2 mb-md-0'\r\n        md='5'\r\n        xs='12'\r\n      >\r\n        <div className='d-flex align-items-center justify-content-center'>\r\n          <img\r\n            className='img-fluid product-img'\r\n            src={data.img}\r\n            alt={data.name}\r\n          />\r\n        </div>\r\n      </Col>\r\n      <Col md='7' xs='12'>\r\n        <h4>{data.name}</h4>\r\n\r\n        <div className='ecommerce-details-price d-flex flex-wrap mt-1'>\r\n          <h4 className='item-price mr-1'>\r\n            ${PriceDisplay() ? PriceDisplay() : data.price}\r\n          </h4>\r\n          <ul className='unstyled-list list-inline'>\r\n            {new Array(5).fill().map((listItem, index) => {\r\n              return (\r\n                <li key={index} className='ratings-list-item mr-25'>\r\n                  <Star className='filled-star' />\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <CardText>\r\n          Available -<span className='text-success ml-25'>In stock</span>\r\n        </CardText>\r\n        <CardText>{data.detail}</CardText>\r\n        <CardText>\r\n\r\n          {\r\n            textHandler(data.name)\r\n          }\r\n        </CardText>\r\n        <ul className='product-features list-unstyled'>\r\n          <li>\r\n            <DollarSign size={19} />\r\n            <span className='text-capitalize'>Bank Transfer Method</span>\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n        <div className='d-flex flex-column flex-sm-row pt-1'>\r\n          <Button\r\n            tag={CartBtnTag}\r\n            className='btn-cart mr-0 mr-sm-1 mb-1 mb-sm-0'\r\n            color='primary'\r\n            to='/create_order'\r\n          >\r\n            <ShoppingCart className='mr-50' size={14} />\r\n            Purchase Item\r\n          </Button>\r\n          {userData.type && userData.type.toLowerCase() === 'admin' && (\r\n            <Fragment>\r\n              <Button\r\n                outline\r\n                className='btn-cart mr-0 mr-sm-1 mb-1 mb-sm-0'\r\n                color='danger'\r\n                onClick={() => {\r\n                  setModalOpened(true)\r\n                }}\r\n              >\r\n                <Trash2 className='mr-50' size={14} />\r\n                Delete Item\r\n              </Button>\r\n              <Modal\r\n                isOpen={modalOpened}\r\n                toggle={() => setModalOpened(!modalOpened)}\r\n                className='modal-dialog-centered'\r\n                modalClassName={'modal-danger'}\r\n              >\r\n                <ModalHeader toggle={() => setModalOpened(!modalOpened)}>\r\n                  Delete Product\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  Are you sure you wanna delete this product, (Deleting product\r\n                  will remove this product from all users view)\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button.Ripple\r\n                    outline\r\n                    color='primary'\r\n                    onClick={() => setModalOpened(!modalOpened)}\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    outline\r\n                    color='danger'\r\n                    onClick={deleteProductMethod}\r\n                  >\r\n                    Delete\r\n                  </Button.Ripple>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Star } from 'react-feather'\r\nimport { CardText } from 'reactstrap'\r\nimport SwiperCore, { Navigation } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Link } from 'react-router-dom'\r\n// ** Styles\r\nimport '@styles/react/libs/swiper/swiper.scss'\r\n\r\nconst RelatedProducts = ({ relatedProds }) => {\r\n  SwiperCore.use([Navigation])\r\n\r\n  // ** Slider params\r\n  const params = {\r\n    className: 'swiper-responsive-breakpoints swiper-container px-4 py-2',\r\n    slidesPerView: 5,\r\n    spaceBetween: 55,\r\n    navigation: true,\r\n    breakpoints: {\r\n      1600: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 55\r\n      },\r\n      1300: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 55\r\n      },\r\n      768: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 55\r\n      },\r\n      320: {\r\n        slidesPerView: 1,\r\n        spaceBetween: 55\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='mt-4 mb-2 text-center'>\r\n        <h4>Related Products</h4>\r\n        <CardText>People also search for this items</CardText>\r\n      </div>\r\n      <Swiper {...params}>\r\n        {relatedProds.length > 0 &&\r\n          relatedProds.map(slide => {\r\n            return (\r\n              <SwiperSlide key={slide.id}>\r\n                <Link\r\n                  to={`/product-detail/${slide.id}`}\r\n                  onClick={() => {\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n                  }}\r\n                >\r\n                  <div className='item-heading mb-2'>\r\n                    <h5 className='text-truncate mb-0'>{slide.name}</h5>\r\n                  </div>\r\n                  <div className='img-container  mx-auto py-75'>\r\n                    <img src={slide.img} alt='swiper 1' className='img-fluid' />\r\n                  </div>\r\n                  <div className='item-meta'>\r\n                    <ul className='unstyled-list list-inline mb-25'>\r\n                      {new Array(5).fill().map((listItem, index) => {\r\n                        return (\r\n                          <li key={index} className='ratings-list-item mr-25'>\r\n                            <Star className='filled-star' />\r\n                          </li>\r\n                        )\r\n                      })}\r\n                    </ul>\r\n                    <CardText className='text-primary mb-0'>\r\n                      S/{slide.price}\r\n                    </CardText>\r\n                  </div>\r\n                </Link>\r\n              </SwiperSlide>\r\n            )\r\n          })}\r\n      </Swiper>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RelatedProducts\r\n","// ** React Imports\r\nimport { useEffect, useState, Fragment } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// ** Product detail components\r\nimport ItemFeatures from './ItemFeatures'\r\nimport ProductDetails from './ProductDetails'\r\nimport RelatedProducts from './RelatedProducts'\r\n\r\n// ** Third Party Components\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProduct } from '../store/actions'\r\nimport { getProductsData } from '../../../../redux/actions/clients'\r\n\r\nimport '@styles/base/pages/app-ecommerce-details.scss'\r\n\r\nconst Details = () => {\r\n  // ** Vars\r\n  const params = useParams().product\r\n  const productId = params\r\n  const [relatedProducts, setRelatedProducts] = useState([])\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.ecommerce)\r\n  const { allProducts } = useSelector(state => state.products)\r\n\r\n  // ** ComponentDidMount : Get product\r\n  useEffect(() => {\r\n    dispatch(getProduct(productId))\r\n  }, [productId])\r\n  useEffect(() => {\r\n    dispatch(getProductsData())\r\n  }, [])\r\n  useEffect(() => {\r\n    const newArr = allProducts.filter(item => item.id !== productId)\r\n    setRelatedProducts(newArr)\r\n  }, [allProducts, productId])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-ecommerce-details'>\r\n        {Object.keys(store.productDetail).length ? (\r\n          <Card>\r\n            <CardBody>\r\n              <ProductDetails\r\n                dispatch={dispatch}\r\n                productId={productId}\r\n                getProduct={getProduct}\r\n                data={store.productDetail}\r\n              />\r\n            </CardBody>\r\n            {/* <ItemFeatures /> */}\r\n            <CardBody>\r\n              <RelatedProducts relatedProds={relatedProducts} />\r\n            </CardBody>\r\n          </Card>\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import axios from 'axios'\nimport { firestore, storage } from '@src/utility/firebase'\n// ** Get data\n\nexport const getProductsData = params => {\n  return async dispatch => {\n    return await firestore\n      .collection('products')\n      .get()\n      .then(snap => {\n        const records = []\n        snap.docs.map(item => {\n          const record = item.data()\n          record.id = item.id\n          records.push(record)\n        })\n        dispatch({\n          type: 'GET_PRODUCT_DATA',\n          data: records\n        })\n      })\n  }\n}\n\nexport const SaveCategory = category => {\n  return async dispatch => {\n    const ref = firestore.collection('categories')\n    const newCat = await ref.add(category)\n    const newData = await ref.doc(newCat.id).get()\n\n    const data = newData.data()\n    data.id = newCat.id\n    return dispatch({\n      type: 'Category_Added',\n      data\n    })\n  }\n}\n\nexport const UpdateCategory = category => {\n  return async dispatch => {\n    const ref = firestore.collection('categories').doc(category.editID)\n    delete category.editID\n    const newCat = await ref.update(category)\n    const newData = await ref.get()\n    const data = newData.data()\n    data.id = newData.id\n    return dispatch({\n      type: 'Category_Updated',\n      data\n    })\n  }\n}\nexport const FetchCategories = () => {\n  return async dispatch => {\n    const ref = firestore.collection('categories')\n    const Categories = await ref.get()\n    const records = []\n    Categories.docs.map(item => {\n      const record = item.data()\n      record.id = item.id\n      records.push(record)\n    })\n    return dispatch({\n      type: 'All_Categories_Fetched',\n      data: records\n    })\n  }\n}\nexport const DeleteCategory = id => {\n  return async dispatch => {\n    const ref = firestore.collection('categories').doc(id)\n    const Categories = await ref.delete()\n    return dispatch({\n      type: 'Category_Delete',\n      id\n    })\n  }\n}\nexport const CreateProduct = category => {\n  return async dispatch => {\n    const ref = firestore.collection('products')\n    if (category.img) {\n      const file = category.img\n      const uploadTask = storage\n        .ref(`/images/${(Math.random() * 1e32).toString(36)}`)\n        .put(file)\n      // return file.name\n      await uploadTask.on(\n        'state_changed',\n        snapShot => {\n          //takes a snap shot of the process as it is happening\n        },\n        err => {\n          //catches the errors\n          console.log(err)\n          return { message: 'data cannot be uploaded', code: 400, err }\n        },\n        () => {\n          // gets the functions from storage refences the image storage in firebase by the children\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\n          storage\n            .ref('images')\n            .child(file.name)\n            .getDownloadURL()\n            .then(fireBaseUrl => {\n              console.log(fireBaseUrl)\n              category.img = fireBaseUrl\n              ref.add(category).then(success => {\n                ref.get().then(data => {\n                  const records = []\n                  data.docs.map(item => {\n                    const record = item.data()\n                    record.id = item.id\n                    records.push(record)\n                  })\n                  return dispatch({\n                    type: 'GET_PRODUCT_DATA',\n                    data: records\n                  })\n                })\n              })\n            })\n            .catch(err => {\n              console.log(err)\n            })\n        }\n      )\n    } else {\n      alert('image not found')\n    }\n    // const newCat = await ref.add(category)\n    // const newData = await ref.doc(newCat.id).get()\n    // const data = newData.data()\n    // data.id = newCat.id\n    // return dispatch({\n    //   type: 'Product_Added',\n    //   data\n    // })\n  }\n}\n\n// ** Delete Invoice\nexport const deleteInvoice = id => {\n  return (dispatch, getStore) => {\n    axios\n      .delete('/apps/invoice/delete', { id })\n      .then(response => {\n        dispatch({\n          type: 'DELETE_INVOICE'\n        })\n      })\n      .then(() => dispatch(getData(getStore().invoice.params)))\n  }\n}\n","import axios from 'axios'\r\nimport { firestore } from '@src/utility/firebase'\r\n// ** GET Products\r\nexport const getProducts = params => {\r\n  const { q } = params\r\n  const queryLowered = q.toLowerCase()\r\n  return async dispatch => {\r\n    return await firestore\r\n      .collection('products')\r\n      .get()\r\n      .then(snap => {\r\n        const records = []\r\n        snap.docs.map(item => {\r\n          const record = item.data()\r\n          record.id = item.id\r\n          if (q.length > 0) {\r\n            if (record.name.toLowerCase().includes(queryLowered)) {\r\n              records.push(record)\r\n            }\r\n          } else {\r\n            records.push(record)\r\n          }\r\n        })\r\n        dispatch({\r\n          type: 'GET_PRODUCTS',\r\n          data: { products: records, total: records.length, params }\r\n        })\r\n      })\r\n  }\r\n}\r\n// ** GET Wishlist Items\r\n\r\n// ** DELETE Wishlist Item\r\nexport const deleteProduct = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('products')\r\n    await ref.doc(id).delete()\r\n    return dispatch({\r\n      type: 'Product_Deleted',\r\n      id\r\n    })\r\n  }\r\n}\r\n\r\n// ** GET Cart Items\r\n\r\n// ** GET Single Product\r\nexport const getProduct = slug => {\r\n  return async dispatch => {\r\n    return await firestore\r\n      .collection('products')\r\n      .doc(slug)\r\n      .get()\r\n      .then(snapshot => {\r\n        const data = snapshot.data()\r\n        data.id = snapshot.id\r\n        dispatch({\r\n          type: 'GET_PRODUCT',\r\n          data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log('Error getting documents', err)\r\n      })\r\n  }\r\n}\r\n"],"sourceRoot":""}