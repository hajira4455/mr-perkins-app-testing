{"version":3,"sources":["views/forms/form-elements/select/SelectReact.js","views/forms/form-elements/select/SelectMulti.js","views/forms/form-elements/select/SelectSizing.js","views/forms/form-elements/select/SelectOptions.js","views/forms/form-elements/select/SelectReactstrap.js","views/forms/form-elements/select/index.js","@core/components/breadcrumbs/index.js"],"names":["colourOptions","value","label","SelectReact","Card","CardHeader","CardTitle","tag","CardBody","className","target","href","rel","Row","Col","md","sm","Label","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","name","isLoading","isDisabled","SelectReactstrap","FormGroup","for","Input","type","id","multiple","CustomInput","size","bsSize","colorOptions","color","isFixed","iconOptions","icon","Facebook","Twitter","Linkedin","GitHub","Instagram","Dribbble","Gitlab","File","FileText","Image","Figma","Chrome","Command","Slack","Youtube","OptionComponent","data","props","Icon","Option","groupedOptions","animatedComponents","makeAnimated","styles","multiValue","base","state","opacity","multiValueLabel","paddingRight","multiValueRemove","display","orderOptions","values","length","filter","v","concat","formatGroupLabel","SelectOptions","useState","fixedValue","setFixedValue","isMulti","closeMenuOnSelect","components","onChange","action","removedValue","xs","loadOptions","inputValue","callback","setTimeout","i","toLowerCase","includes","filterColors1","defaultOptions","onInputChange","newValue","replace","Promise","resolve","filterColors2","cacheOptions","disabled","Select","breadCrumbTitle","breadCrumbParent","breadCrumbActive","SelectSizing","SelectMulti","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","right","Link"],"mappings":"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","file":"static/js/57.05f8c8ee.chunk.js","sourcesContent":["import Select from 'react-select'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\r\n\r\nconst colourOptions = [\r\n  { value: 'ocean', label: 'Ocean' },\r\n  { value: 'blue', label: 'Blue' },\r\n  { value: 'purple', label: 'Purple' },\r\n  { value: 'red', label: 'Red' },\r\n  { value: 'orange', label: 'Orange' }\r\n]\r\n\r\nconst SelectReact = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>React Select</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <p>\r\n          React Select is a flexible and beautiful Select Input control for ReactJS with multiselect, autocomplete,\r\n          async and creatable support. You can read it's documentation from{' '}\r\n          <a className='my-50' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>\r\n            here\r\n          </a>\r\n          .\r\n        </p>\r\n        <Row>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Basic</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Clearable</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[1]}\r\n              name='clear'\r\n              options={colourOptions}\r\n              isClearable\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Loading</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[2]}\r\n              name='loading'\r\n              options={colourOptions}\r\n              isLoading={true}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Disabled</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[3]}\r\n              name='disabled'\r\n              options={colourOptions}\r\n              isDisabled={true}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReact\r\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, CustomInput, Label, Row, Col } from 'reactstrap'\r\n\r\nconst SelectReactstrap = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Reactstrap Multi Select</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col md='4' sm='12'>\r\n            <FormGroup>\r\n              <Label for='select-multi'>Multiple Select</Label>\r\n              <Input type='select' name='select' id='select-multi' multiple>\r\n                <option>Square</option>\r\n                <option>Rectangle</option>\r\n                <option>Circle</option>\r\n                <option>Triangle</option>\r\n                <option>Pentagon</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md='4' sm='12'>\r\n            <FormGroup>\r\n              <Label for='custom-select-multi'>Custom Multiple Select</Label>\r\n              <CustomInput type='select' name='select' id='custom-select-multi' multiple>\r\n                <option>Square</option>\r\n                <option>Rectangle</option>\r\n                <option>Circle</option>\r\n                <option>Triangle</option>\r\n                <option>Pentagon</option>\r\n              </CustomInput>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md='4' sm='12'>\r\n            <FormGroup>\r\n              <Label for='custom-select-size'>Custom Select Size</Label>\r\n              <CustomInput type='select' name='select' id='custom-select-size' size={4} multiple>\r\n                <option>Square</option>\r\n                <option>Rectangle</option>\r\n                <option>Circle</option>\r\n                <option>Triangle</option>\r\n                <option>Pentagon</option>\r\n              </CustomInput>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReactstrap\r\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, Label } from 'reactstrap'\r\n\r\nconst SelectReactstrap = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Bootstrap Sizing</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <FormGroup>\r\n          <Label for='select-lg'>Select Large</Label>\r\n          <Input type='select' name='select' bsSize='lg' id='select-lg'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='select-default'>Select Default</Label>\r\n          <Input type='select' name='select' id='select-default'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='select-sm'>Select Small</Label>\r\n          <Input type='select' name='select' bsSize='sm' id='select-sm'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReactstrap\r\n","import { useState } from 'react'\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\r\nimport { selectThemeColors } from '@utils'\r\nimport Select, { components } from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {\r\n  Facebook,\r\n  Twitter,\r\n  Linkedin,\r\n  GitHub,\r\n  Instagram,\r\n  Dribbble,\r\n  Gitlab,\r\n  File,\r\n  FileText,\r\n  Image,\r\n  Figma,\r\n  Chrome,\r\n  Command,\r\n  Slack,\r\n  Youtube\r\n} from 'react-feather'\r\n\r\nconst colorOptions = [\r\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n  { value: 'blue', label: 'Blue', color: '#0052CC', isFixed: true },\r\n  { value: 'purple', label: 'Purple', color: '#5243AA', isFixed: true },\r\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: false },\r\n  { value: 'orange', label: 'Orange', color: '#FF8B00', isFixed: false },\r\n  { value: 'yellow', label: 'Yellow', color: '#FFC400', isFixed: false }\r\n]\r\n\r\nconst iconOptions = [\r\n  {\r\n    label: 'Social Media',\r\n    options: [\r\n      {\r\n        value: 'facebook',\r\n        label: 'Facebook',\r\n        icon: Facebook\r\n      },\r\n      {\r\n        value: 'twitter',\r\n        label: 'Twitter',\r\n        icon: Twitter\r\n      },\r\n      {\r\n        value: 'linkedin',\r\n        label: 'Linkedin',\r\n        icon: Linkedin\r\n      },\r\n      {\r\n        value: 'github',\r\n        label: 'Github',\r\n        icon: GitHub\r\n      },\r\n      {\r\n        value: 'instagram',\r\n        label: 'Instagram',\r\n        icon: Instagram\r\n      },\r\n      {\r\n        value: 'dribbble',\r\n        label: 'Dribbble',\r\n        icon: Dribbble\r\n      },\r\n      {\r\n        value: 'gitlab',\r\n        label: 'Gitlab',\r\n        icon: Gitlab\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'File Types',\r\n    options: [\r\n      { value: 'pdf', label: 'PDF', icon: File },\r\n      { value: 'word', label: 'word', icon: FileText },\r\n      { value: 'image', label: 'Image', icon: Image }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Others',\r\n    options: [\r\n      { value: 'figma', label: 'Figma', icon: Figma },\r\n      { value: 'chrome', label: 'Chrome', icon: Chrome },\r\n      { value: 'safari', label: 'Safari', icon: Command },\r\n      { value: 'slack', label: 'Slack', icon: Slack },\r\n      { value: 'youtube', label: 'Youtube', icon: Youtube }\r\n    ]\r\n  }\r\n]\r\n\r\nconst OptionComponent = ({ data, ...props }) => {\r\n  const Icon = data.icon\r\n\r\n  return (\r\n    <components.Option {...props}>\r\n      <Icon className='mr-50' size={14} />\r\n      {data.label}\r\n    </components.Option>\r\n  )\r\n}\r\n\r\nconst groupedOptions = [\r\n  {\r\n    label: 'Ice Creams',\r\n    options: [\r\n      { value: 'vanilla', label: 'Vanilla' },\r\n      { value: 'Dark Chocolate', label: 'Dark Chocolate' },\r\n      { value: 'chocolate', label: 'Chocolate' },\r\n      { value: 'strawberry', label: 'Strawberry' },\r\n      { value: 'salted-caramel', label: 'Salted Caramel' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Snacks',\r\n    options: [\r\n      { value: 'Pizza', label: 'Pizza' },\r\n      { value: 'Burger', label: 'Burger' },\r\n      { value: 'Pasta', label: 'Pasta' },\r\n      { value: 'Pretzel', label: 'Pretzel' },\r\n      { value: 'Popcorn', label: 'Popcorn' }\r\n    ]\r\n  }\r\n]\r\n\r\nconst animatedComponents = makeAnimated()\r\n\r\nconst styles = {\r\n  multiValue: (base, state) => {\r\n    return state.data.isFixed ? { ...base, opacity: '0.5' } : base\r\n  },\r\n  multiValueLabel: (base, state) => {\r\n    return state.data.isFixed ? { ...base, color: '#626262', paddingRight: 6 } : base\r\n  },\r\n  multiValueRemove: (base, state) => {\r\n    return state.data.isFixed ? { ...base, display: 'none' } : base\r\n  }\r\n}\r\n\r\nconst orderOptions = values => {\r\n  if (values.length > 0) return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed))\r\n}\r\n\r\nconst formatGroupLabel = data => (\r\n  <div className='d-flex justify-content-between align-center'>\r\n    <strong>\r\n      <span>{data.label}</span>\r\n    </strong>\r\n    <span>{data.options.length}</span>\r\n  </div>\r\n)\r\n\r\nconst SelectOptions = () => {\r\n  const [fixedValue, setFixedValue] = useState(orderOptions([colorOptions[0], colorOptions[1], colorOptions[3]]))\r\n\r\n  const filterColors1 = inputValue => {\r\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\r\n  }\r\n\r\n  const loadOptions = (inputValue, callback) => {\r\n    setTimeout(() => {\r\n      callback(filterColors1(inputValue))\r\n    }, 2000)\r\n  }\r\n\r\n  const filterColors2 = inputValue => {\r\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\r\n  }\r\n\r\n  const fixedOnChange = (value, { action, removedValue }) => {\r\n    switch (action) {\r\n      case 'remove-value':\r\n      case 'pop-value':\r\n        if (removedValue.isFixed) {\r\n          return\r\n        }\r\n        break\r\n      case 'clear':\r\n        value = colorOptions.filter(v => v.isFixed)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    value = orderOptions(value)\r\n    setFixedValue(value)\r\n  }\r\n\r\n  const handleInputChange = newValue => {\r\n    const val = newValue.replace(/\\W/g, '')\r\n    return val\r\n  }\r\n\r\n  const promiseOptions = inputValue => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(filterColors2(inputValue))\r\n      }, 2000)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Multi Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              defaultValue={[colorOptions[2], colorOptions[3]]}\r\n              isMulti\r\n              name='colors'\r\n              options={colorOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Grouped Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              defaultValue={colorOptions[1]}\r\n              options={groupedOptions}\r\n              formatGroupLabel={formatGroupLabel}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Animated Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={[colorOptions[4], colorOptions[5]]}\r\n              isMulti\r\n              options={colorOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Fixed Options Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              value={fixedValue}\r\n              styles={styles}\r\n              isMulti\r\n              onChange={fixedOnChange}\r\n              theme={selectThemeColors}\r\n              name='colors'\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={colorOptions}\r\n            />\r\n          </Col>\r\n          <Col md={6} xs={12} className='mb-1'>\r\n            <Label>Async Callback Select</Label>\r\n            <AsyncSelect\r\n              isClearable={false}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              name='callback-react-select'\r\n              loadOptions={loadOptions}\r\n              defaultOptions\r\n              onInputChange={handleInputChange}\r\n              theme={selectThemeColors}\r\n            />\r\n          </Col>\r\n          <Col md={6} xs={12} className='mb-1'>\r\n            <Label>Async Promises Select</Label>\r\n            <AsyncSelect\r\n              isClearable={false}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              loadOptions={promiseOptions}\r\n              cacheOptions\r\n              defaultOptions\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Creatable Select</Label>\r\n            <CreatableSelect options={colorOptions} className='react-select' classNamePrefix='select' />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label>Icons</Label>\r\n            <Select\r\n              options={iconOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              components={{\r\n                Option: OptionComponent\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectOptions\r\n","import { Card, CardHeader, CardTitle, CardBody, FormGroup, Input, CustomInput, Label } from 'reactstrap'\r\n\r\nconst SelectReactstrap = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Reactstrap Select</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <FormGroup>\r\n          <Label for='select-basic'>Basic Select</Label>\r\n          <Input type='select' name='select' id='select-basic'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='select-custom'>Custom Select</Label>\r\n          <CustomInput type='select' name='select' id='select-custom'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </CustomInput>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='select-disabled'>Disabled Select</Label>\r\n          <Input type='select' name='select' id='select-disabled' disabled>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReactstrap\r\n","import { Fragment } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport ReactSelect from './SelectReact'\r\nimport SelectMulti from './SelectMulti'\r\nimport SelectSizing from './SelectSizing'\r\nimport Selectoptions from './SelectOptions'\r\nimport SelectReactstrap from './SelectReactstrap'\r\n\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Select = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Select' breadCrumbParent='Form Elements' breadCrumbActive='Select' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <ReactSelect />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Selectoptions />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <SelectReactstrap />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <SelectSizing />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SelectMulti />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Select\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}