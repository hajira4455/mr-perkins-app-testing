{"version":3,"sources":["redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/UsedRoutes.js","router/routes/Forms.js","router/routes/index.js","utility/hooks/useSkin.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","redux/actions/navbar/index.js","@core/components/autocomplete/index.js","utility/hooks/useOnClickOutside.js","@core/layouts/components/navbar/NavbarSearch.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/NavbarBookmarks.js","@core/layouts/components/navbar/index.js","navigation/vertical/dashboards.js","navigation/vertical/clients.js","navigation/vertical/orders.js","navigation/vertical/products.js","navigation/vertical/news.js","navigation/vertical/contact.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/dashboards.js","navigation/horizontal/clients.js","navigation/horizontal/orders.js","navigation/horizontal/products.js","navigation/horizontal/news.js","navigation/horizontal/contact.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","auth/firebase/firebaseConfig.js","utility/firebase/index.js","utility/Utils.js","@core/components/avatar/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","redux/actions/auth/index.js"],"names":["handleContentWidth","value","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","props","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Tag","Fragment","useEffect","menuCollapsed","menuHidden","className","classnames","query","length","ClientDefinedRoutes","path","component","lazy","meta","authRoute","exact","navLink","FormRoutes","Routes","UsedRoutes","Forms","useSkin","useState","item","window","localStorage","getItem","JSON","parse","themeConfig","skin","error","console","log","setSkin","element","document","body","classList","remove","add","dark","bordered","valueToStore","Function","setItem","stringify","BlankLayout","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","size","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","UserDropdown","Auth","auth","userData","setUserData","userType","setUserType","isAuthenticated","authenticated","user","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","tag","DropdownToggle","img","imgHeight","imgWidth","status","DropdownMenu","right","DropdownItem","Link","to","handleLogout","handleSearchQuery","val","Autocomplete","ref","handler","suggestionsListComponent","container","useRef","inputElRef","suggestionsListRef","focused","setFocused","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","userInput","setUserInput","history","useHistory","filteredData","onSuggestionItemClick","url","filterKey","undefined","push","onSuggestionClick","onSuggestionItemHover","renderGroupedSuggestion","arr","customRender","suggestionURL","link","active","indexOf","onMouseEnter","renderSuggestion","defaultSuggestions","ReactDOM","findDOMNode","current","autoFocus","focus","clearInput","onSuggestionsShown","externalClick","listener","event","contains","target","addEventListener","removeEventListener","wheelPropagation","grouped","filterHeaderKey","suggestions","suggestion","sortData","data","filter","startCondition","toLowerCase","startsWith","includeCondition","includes","slice","searchLimit","suggestionLimit","sortSingleData","renderUngroupedSuggestions","renderSuggestions","currentTarget","onKeyDown","suggestionList","keyCode","scrollTop","scrollHeight","placeholder","stopPropagation","onFocus","onBlur","NavbarSearch","setSuggestions","navbarSearch","setNavbarSearch","axios","get","then","searchArr","handleClearQueryInStore","NavItem","NavLink","handleClearInput","setTimeout","IconTag","Icon","icon","func","handleListItemClick","file","src","height","width","alt","title","by","email","date","NavbarUser","NavbarBookmarks","setMenuVisibility","setValue","openSearch","setOpenSearch","response","bookmarks","handleBookmarkUpdate","post","updateBookmarked","show","style","isBookmarked","ThemeNavbar","permissions","dashboards","clients","orders","products","news","contact","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","app","appLogoImage","resolveVerticalNavMenuItemComponent","header","isNavLinkActive","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","strict","parents","searchParents","disabled","newTab","isActive","resetActiveGroup","badge","badgeText","Badge","pill","VerticalNavMenuGroup","allParents","activeArr","splice","openArr","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","VerticalMenuNavItems","useContext","AbilityContext","Components","resolveNavItemComponent","usertype","TagName","Sidebar","menu","setMenuHover","shadowRef","expanded","onMouseLeave","onScrollY","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","Layouts","NotAuthorized","isUserLoggedIn","Error","FinalRoute","route","action","resource","publicRoute","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App","login","firstLoadingAuth","initializing","Spinner","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","initializeApp","firebaseConfig","SecondaryAuth","firebaseAuth","firestore","storage","isObjEmpty","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","imgClassName","initials","badgeUp","content","badgeColor","contentStyles","rest","str","results","split","forEach","fullword","join","substr","getInitials","defaultProps","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","interceptors","request","use","accessToken","getToken","headers","Authorization","Promise","reject","originalRequest","refreshToken","r","setToken","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","callback","args","getRefreshToken","jwt","useJwt","removeItem","submitRegisterWithFireBase","username","password","createUserWithEmailAndPassword","signOut","collection","doc","uid","set","created","Date","updateProfile","displayName","photoURL","RetriveLoginData","localUser","exists","payload","isSignedIn","loggedInWith","catch","err","submitLoginWithFireBase","remember","signInWithEmailAndPassword","onAuthStateChanged","setPersistence","Persistence","SESSION","userEmail","loggedIn"],"mappings":"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","file":"static/js/23.62f422d8.chunk.js","sourcesContent":["// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react'\n\nconst ClientDefinedRoutes = [\n  {\n    path: '/login',\n    component: lazy(() => import('../../views/pages/authentication/Login')),\n    layout: 'BlankLayout',\n    meta: {\n      authRoute: true\n    }\n  },\n  {\n    path: '/register',\n    component: lazy(() => import('../../views/pages/authentication/Register')),\n    layout: 'BlankLayout',\n    meta: {\n      authRoute: true\n    }\n  },\n\n  {\n    path: '/dashboard',\n    component: lazy(() => import('../../views/dashboard/ecommerce')),\n    exact: true\n  },\n  {\n    path: '/clients/',\n    component: lazy(() => import('../../views/apps/user/list')),\n    exact: true\n  },\n\n  {\n    path: '/clients/view/:id',\n    component: lazy(() => import('../../views/apps/user/view')),\n    meta: {\n      navLink: '/apps/user/view'\n    }\n  },\n  {\n    path: '/clients/edit/:id',\n    component: lazy(() => import('../../views/apps/user/edit'))\n  },\n\n  // {\n  //   path: '/products',\n  //   component: lazy(() => import('../../views/Application/products'))\n  // },\n  {\n    path: '/products',\n    className: 'ecommerce-application',\n    component: lazy(() => import('../../views/apps/ecommerce/shop'))\n  },\n\n  {\n    path: '/product-detail/:product',\n    exact: true,\n    className: 'ecommerce-application',\n    component: lazy(() => import('../../views/apps/ecommerce/detail')),\n    meta: {\n      navLink: '/product-detail'\n    }\n  },\n  {\n    path: '/orders',\n    component: lazy(() => import('../../views/apps/invoice/list'))\n  },\n  {\n    path: '/create_order',\n    component: lazy(() => import('../../views/apps/invoice/add'))\n  },\n  {\n    path: '/invoice/preview/:id',\n    component: lazy(() => import('../../views/apps/invoice/preview')),\n    meta: {\n      navLink: '/apps/invoice/preview'\n    }\n  },\n  {\n    path: '/profile',\n    // component: lazy(() => import('../../views/pages/profile'))\n    component: lazy(() => import('../../views/pages/account-settings'))\n  },\n  {\n    path: '/contact',\n    component: lazy(() => import('../../views/Application/contact'))\n  },\n  {\n    path: '/news/offers',\n    component: lazy(() => import('../../views/Application/news'))\n  }\n]\n\nexport default ClientDefinedRoutes\n","import { lazy } from 'react'\r\n\r\nconst FormRoutes = [\r\n  {\r\n    path: '/forms/elements/input',\r\n    component: lazy(() => import('../../views/forms/form-elements/input'))\r\n  },\r\n  {\r\n    path: '/forms/elements/input-group',\r\n    component: lazy(() => import('../../views/forms/form-elements/input-groups'))\r\n  },\r\n  {\r\n    path: '/forms/elements/input-mask',\r\n    component: lazy(() => import('../../views/forms/form-elements/input-mask'))\r\n  },\r\n  {\r\n    path: '/forms/elements/textarea',\r\n    component: lazy(() => import('../../views/forms/form-elements/textarea'))\r\n  },\r\n  {\r\n    path: '/forms/elements/checkbox',\r\n    component: lazy(() => import('../../views/forms/form-elements/checkboxes'))\r\n  },\r\n  {\r\n    path: '/forms/elements/radio',\r\n    component: lazy(() => import('../../views/forms/form-elements/radio'))\r\n  },\r\n  {\r\n    path: '/forms/elements/switch',\r\n    component: lazy(() => import('../../views/forms/form-elements/switch'))\r\n  },\r\n  {\r\n    path: '/forms/elements/select',\r\n    component: lazy(() => import('../../views/forms/form-elements/select'))\r\n  },\r\n  {\r\n    path: '/forms/elements/number-input',\r\n    component: lazy(() => import('../../views/forms/form-elements/number-input'))\r\n  },\r\n  {\r\n    path: '/forms/elements/file-uploader',\r\n    component: lazy(() => import('../../views/forms/form-elements/file-uploader'))\r\n  },\r\n  {\r\n    path: '/forms/elements/editor',\r\n    component: lazy(() => import('../../views/forms/form-elements/editor'))\r\n  },\r\n  {\r\n    path: '/forms/elements/pickers',\r\n    component: lazy(() => import('../../views/forms/form-elements/datepicker'))\r\n  },\r\n  {\r\n    path: '/forms/layout/form-layout',\r\n    component: lazy(() => import('../../views/forms/form-layouts'))\r\n  },\r\n  {\r\n    path: '/forms/wizard',\r\n    component: lazy(() => import('../../views/forms/wizard'))\r\n  },\r\n  {\r\n    path: '/forms/react-hook-form',\r\n    component: lazy(() => import('../../views/forms/validations/react-hook-form'))\r\n  },\r\n  {\r\n    path: '/forms/reactstrap-validation',\r\n    component: lazy(() => import('../../views/forms/validations/reactstrap'))\r\n  },\r\n  {\r\n    path: '/forms/form-repeater',\r\n    component: lazy(() => import('../../views/forms/form-repeater'))\r\n  }\r\n]\r\n\r\nexport default FormRoutes\r\n","// ** Routes Imports\r\nimport UsedRoutes from './UsedRoutes'\r\nimport Forms from './Forms'\r\n// ** Document title\r\nconst TemplateTitle = '%s -Mr Perkins Web Store'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard'\r\n\r\n// ** Merge Routes\r\nconst Routes = [...UsedRoutes, ...Forms]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\nconst BlankLayout = ({ children, ...rest }) => {\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='blank-page'>\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { Settings, X } from 'react-feather'\r\nimport { CustomInput, FormGroup } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    setSkin,\r\n    isRtl,\r\n    setIsRtl,\r\n    layout,\r\n    setLayout,\r\n    navbarType,\r\n    setNavbarType,\r\n    footerType,\r\n    setFooterType,\r\n    navbarColor,\r\n    setNavbarColor,\r\n    isHidden,\r\n    setIsHidden,\r\n    contentWidth,\r\n    setContentWidth,\r\n    menuCollapsed,\r\n    setMenuCollapsed,\r\n    transition,\r\n    setTransition\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setSkin(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setNavbarType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={`footer-${radio.name}`}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setFooterType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // **  Router Transition Options\r\n  const transitionOptions = [\r\n    { value: 'fadeIn', label: 'Fade' },\r\n    { value: 'fadeInLeft', label: 'Fade In Left' },\r\n    { value: 'zoomIn', label: 'Zoom In' },\r\n    { value: 'none', label: 'None' }\r\n  ]\r\n\r\n  // ** Get Current Transition\r\n  const transitionValue = transitionOptions.find(i => i.value === transition)\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content'>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='full-width'\r\n                className='mr-1'\r\n                label='Full Width'\r\n                checked={contentWidth === 'full'}\r\n                onChange={() => setContentWidth('full')}\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='boxes'\r\n                label='Boxed'\r\n                checked={contentWidth === 'boxed'}\r\n                onChange={() => setContentWidth('boxed')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex'>\r\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\r\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <p className='font-weight-bold mb-0'>Router Transition</p>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={transitionOptions[0]}\r\n                value={transitionValue}\r\n                options={transitionOptions}\r\n                isClearable={false}\r\n                onChange={({ value }) => setTransition(value)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='font-weight-bold'>Menu Layout</p>\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='vertical-layout'\r\n                label='Vertical'\r\n                checked={layout === 'VerticalLayout'}\r\n                onChange={() => setLayout('vertical')}\r\n                className='mr-1'\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='horizontal-layout'\r\n                label='Horizontal'\r\n                checked={layout === 'HorizontalLayout'}\r\n                onChange={() => setLayout('horizontal')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\r\n                <CustomInput\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\r\n              <CustomInput\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <p className='font-weight-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-right d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleLogout } from '@store/actions/auth'\r\n\r\n// ** Third Party Components\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem\r\n} from 'reactstrap'\r\nimport {\r\n  User,\r\n  Mail,\r\n  CheckSquare,\r\n  MessageSquare,\r\n  Settings,\r\n  CreditCard,\r\n  HelpCircle,\r\n  Power\r\n} from 'react-feather'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const Auth = useSelector(state => state.auth)\r\n  const [userData, setUserData] = useState(null)\r\n  const [userType, setUserType] = useState(null)\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (Auth.isAuthenticated.authenticated) {\r\n      setUserData(Auth.userData.user)\r\n      setUserType(Auth.userData.type)\r\n    }\r\n  }, [Auth])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle\r\n        href='/'\r\n        tag='a'\r\n        className='nav-link dropdown-user-link'\r\n        onClick={e => e.preventDefault()}\r\n      >\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          <span className='user-name font-weight-bold text-capitalize'>\r\n            {userData ? userData.name : ''}\r\n          </span>\r\n          <span className='user-status text-capitalize'>{userType}</span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        {/* {userData && userData.type !== 'admin' && (\r\n          <DropdownItem tag={Link} to='/profile'>\r\n            <User size={14} className='mr-75' />\r\n            <span className='align-middle'>Mi cuenta</span>\r\n          </DropdownItem>\r\n        )}\r\n        <DropdownItem divider /> */}\r\n        <DropdownItem\r\n          tag={Link}\r\n          to='/login'\r\n          onClick={() => dispatch(handleLogout())}\r\n        >\r\n          <Power size={14} className='mr-75' />\r\n          <span className='align-middle'>Cerrar sesión</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","import axios from 'axios'\r\n\r\n// ** Get Bookmarks Array from @fakeDB\r\nexport const getBookmarks = () => {\r\n  return dispatch => {\r\n    return axios.get('/api/bookmarks/data').then(response => {\r\n      dispatch({\r\n        type: 'GET_BOOKMARKS',\r\n        data: response.data.suggestions,\r\n        bookmarks: response.data.bookmarks\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update & Get Updated Bookmarks Array\r\nexport const updateBookmarked = id => {\r\n  return dispatch => {\r\n    return axios.post('/api/bookmarks/update', { id }).then(() => {\r\n      dispatch({ type: 'UPDATE_BOOKMARKED', id })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Handle Bookmarks & Main Search Queries\r\nexport const handleSearchQuery = val => dispatch => dispatch({ type: 'HANDLE_SEARCH_QUERY', val })\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { AlertCircle } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Custom Hooks\r\nimport { useOnClickOutside } from '@hooks/useOnClickOutside'\r\n\r\n// ** Styles\r\nimport '@styles/base/bootstrap-extended/_include.scss'\r\nimport './autocomplete.scss'\r\n\r\nconst Autocomplete = props => {\r\n  // ** Refs\r\n  const container = useRef(null)\r\n  const inputElRef = useRef(null)\r\n  const suggestionsListRef = useRef(null)\r\n\r\n  // ** States\r\n  const [focused, setFocused] = useState(false)\r\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\r\n  const [showSuggestions, setShowSuggestions] = useState(false)\r\n  const [userInput, setUserInput] = useState(props.value ? props.value : '')\r\n\r\n  // ** Vars\r\n  const history = useHistory()\r\n  let filteredData = []\r\n\r\n  // ** Suggestion Item Click Event\r\n  const onSuggestionItemClick = (url, e) => {\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(false)\r\n    setUserInput(filteredData[activeSuggestion][props.filterKey])\r\n    if (url !== undefined && url !== null) {\r\n      history.push(url)\r\n    }\r\n\r\n    if (props.onSuggestionClick) {\r\n      props.onSuggestionClick(url, e)\r\n    }\r\n  }\r\n\r\n  // ** Suggestion Hover Event\r\n  const onSuggestionItemHover = index => {\r\n    setActiveSuggestion(index)\r\n  }\r\n\r\n  // ** Input On Change Event\r\n  const onChange = e => {\r\n    const userInput = e.currentTarget.value\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(true)\r\n    setUserInput(userInput)\r\n    if (e.target.value < 1) {\r\n      setShowSuggestions(false)\r\n    }\r\n  }\r\n\r\n  // ** Input Click Event\r\n  const onInputClick = e => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  // ** Input's Keydown Event\r\n  const onKeyDown = e => {\r\n    const filterKey = props.filterKey\r\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current)\r\n\r\n    // ** User pressed the up arrow\r\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\r\n      setActiveSuggestion(activeSuggestion - 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\r\n        suggestionList.scrollTop = 0\r\n      }\r\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\r\n      // ** User pressed the down arrow\r\n      setActiveSuggestion(activeSuggestion + 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\r\n        suggestionList.scrollTop = suggestionList.scrollHeight\r\n      }\r\n    } else if (e.keyCode === 27) {\r\n      // ** User Pressed ESC\r\n      setShowSuggestions(false)\r\n      setUserInput('')\r\n    } else if (e.keyCode === 13 && showSuggestions) {\r\n      // ** User Pressed ENTER\r\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e)\r\n      setUserInput(filteredData[activeSuggestion][filterKey])\r\n      setShowSuggestions(false)\r\n    } else {\r\n      return\r\n    }\r\n\r\n    // ** Custom Keydown Event\r\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\r\n      props.onKeyDown(e, userInput)\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Grouped Suggestions\r\n  const renderGroupedSuggestion = arr => {\r\n    const { filterKey, customRender } = props\r\n\r\n    const renderSuggestion = (item, i) => {\r\n      if (!customRender) {\r\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null\r\n        return (\r\n          <li\r\n            className={classnames('suggestion-item', {\r\n              active: filteredData.indexOf(item) === activeSuggestion\r\n            })}\r\n            key={item[filterKey]}\r\n            onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n            onMouseEnter={() => {\r\n              onSuggestionItemHover(filteredData.indexOf(item))\r\n            }}\r\n          >\r\n            {item[filterKey]}\r\n          </li>\r\n        )\r\n      } else if (customRender) {\r\n        return customRender(\r\n          item,\r\n          i,\r\n          filteredData,\r\n          activeSuggestion,\r\n          onSuggestionItemClick,\r\n          onSuggestionItemHover,\r\n          userInput\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    return arr.map((item, i) => {\r\n      return renderSuggestion(item, i)\r\n    })\r\n  }\r\n\r\n  // ** Function To Render Ungrouped Suggestions\r\n  const renderUngroupedSuggestions = () => {\r\n    const { filterKey, suggestions, customRender, suggestionLimit } = props\r\n\r\n    filteredData = []\r\n    const sortSingleData = suggestions\r\n      .filter(i => {\r\n        const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n          includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n        if (startCondition) {\r\n          return startCondition\r\n        } else if (!startCondition && includeCondition) {\r\n          return includeCondition\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n      .slice(0, suggestionLimit)\r\n    filteredData.push(...sortSingleData)\r\n    if (sortSingleData.length) {\r\n      return sortSingleData.map((suggestion, index) => {\r\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null\r\n        if (!customRender) {\r\n          return (\r\n            <li\r\n              className={classnames('suggestion-item', {\r\n                active: filteredData.indexOf(suggestion) === activeSuggestion\r\n              })}\r\n              key={suggestion[filterKey]}\r\n              onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n              onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\r\n            >\r\n              {suggestion[filterKey]}\r\n            </li>\r\n          )\r\n        } else if (customRender) {\r\n          return customRender(\r\n            suggestion,\r\n            index,\r\n            filteredData,\r\n            activeSuggestion,\r\n            onSuggestionItemClick,\r\n            onSuggestionItemHover,\r\n            userInput\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n    } else {\r\n      return (\r\n        <li className='suggestion-item no-result'>\r\n          <AlertCircle size={15} /> <span className='align-middle ml-50'>No Result</span>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Suggestions\r\n  const renderSuggestions = () => {\r\n    const { filterKey, grouped, filterHeaderKey, suggestions } = props\r\n\r\n    // ** Checks if suggestions are grouped or not.\r\n    if (grouped === undefined || grouped === null || !grouped) {\r\n      return renderUngroupedSuggestions()\r\n    } else {\r\n      filteredData = []\r\n      return suggestions.map(suggestion => {\r\n        const sortData = suggestion.data\r\n          .filter(i => {\r\n            const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n              includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n            if (startCondition) {\r\n              return startCondition\r\n            } else if (!startCondition && includeCondition) {\r\n              return includeCondition\r\n            } else {\r\n              return null\r\n            }\r\n          })\r\n          .slice(0, suggestion.searchLimit)\r\n\r\n        filteredData.push(...sortData)\r\n        return (\r\n          <Fragment key={suggestion[filterHeaderKey]}>\r\n            <li className='suggestion-item suggestion-title-wrapper'>\r\n              <h6 className='suggestion-title'>{suggestion[filterHeaderKey]}</h6>\r\n            </li>\r\n            {sortData.length ? (\r\n              renderGroupedSuggestion(sortData)\r\n            ) : (\r\n              <li className='suggestion-item no-result'>\r\n                <AlertCircle size={15} /> <span className='align-middle ml-50'>No Result</span>\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n  }, [focused, props.defaultSuggestions])\r\n\r\n  //** ComponentDidUpdate\r\n  useEffect(() => {\r\n    const textInput = ReactDOM.findDOMNode(inputElRef.current)\r\n\r\n    // ** For searchbar focus\r\n    if (textInput !== null && props.autoFocus) {\r\n      inputElRef.current.focus()\r\n    }\r\n\r\n    // ** If user has passed default suggestions & focus then show default suggestions\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n\r\n    // ** Function to run on user passed Clear Input\r\n    if (props.clearInput) {\r\n      props.clearInput(userInput, setUserInput)\r\n    }\r\n\r\n    // ** Function on Suggestions Shown\r\n    if (props.onSuggestionsShown && showSuggestions) {\r\n      props.onSuggestionsShown(userInput)\r\n    }\r\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props])\r\n\r\n  // ** On External Click Close The Search & Call Passed Function\r\n  useOnClickOutside(container, () => {\r\n    setShowSuggestions(false)\r\n    if (props.externalClick) {\r\n      props.externalClick()\r\n    }\r\n  })\r\n\r\n  let suggestionsListComponent\r\n\r\n  if (showSuggestions) {\r\n    suggestionsListComponent = (\r\n      <PerfectScrollbar\r\n        className={classnames('suggestions-list', {\r\n          [props.wrapperClass]: props.wrapperClass\r\n        })}\r\n        ref={suggestionsListRef}\r\n        component='ul'\r\n        options={{ wheelPropagation: false }}\r\n      >\r\n        {renderSuggestions()}\r\n      </PerfectScrollbar>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='autocomplete-container' ref={container}>\r\n      <input\r\n        type='text'\r\n        onChange={e => {\r\n          onChange(e)\r\n          if (props.onChange) {\r\n            props.onChange(e)\r\n          }\r\n        }}\r\n        onKeyDown={e => onKeyDown(e)}\r\n        value={userInput}\r\n        className={`autocomplete-search ${props.className ? props.className : ''}`}\r\n        placeholder={props.placeholder}\r\n        onClick={onInputClick}\r\n        ref={inputElRef}\r\n        onFocus={e => setFocused(true)}\r\n        autoFocus={props.autoFocus}\r\n        onBlur={e => {\r\n          if (props.onBlur) props.onBlur(e)\r\n          setFocused(false)\r\n        }}\r\n      />\r\n      {suggestionsListComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Autocomplete\r\n\r\n// ** PropTypes\r\nAutocomplete.propTypes = {\r\n  suggestions: PropTypes.array.isRequired,\r\n  filterKey: PropTypes.string.isRequired,\r\n  defaultValue: PropTypes.string,\r\n  wrapperClass: PropTypes.string,\r\n  filterHeaderKey: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  suggestionLimit: PropTypes.number,\r\n  grouped: PropTypes.bool,\r\n  autoFocus: PropTypes.bool,\r\n  onKeyDown: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onSuggestionsShown: PropTypes.func,\r\n  onSuggestionItemClick: PropTypes.func,\r\n  clearInput: PropTypes.func,\r\n  externalClick: PropTypes.func\r\n}\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // ** Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return\r\n        }\r\n\r\n        // ** Call passed function on click outside\r\n        handler(event)\r\n      }\r\n\r\n      document.addEventListener('mousedown', listener)\r\n      document.addEventListener('touchstart', listener)\r\n\r\n      return () => {\r\n        document.removeEventListener('mousedown', listener)\r\n        document.removeEventListener('touchstart', listener)\r\n      }\r\n    },\r\n    // ** Add ref and handler to effect dependencies\r\n    // ** It's worth noting that because passed in handler is a new ...\r\n    // ** ... function on every render that will cause this effect ...\r\n    // ** ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ** ... but to optimize you can wrap handler in useCallback before ...\r\n    // ** ... passing it into this hook.\r\n    [ref, handler]\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport * as Icon from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleSearchQuery } from '@store/actions/navbar'\r\n\r\n// ** Custom Components\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\nconst NavbarSearch = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** States\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [navbarSearch, setNavbarSearch] = useState(false)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    axios.get('/api/main-search/data').then(({ data }) => {\r\n      setSuggestions(data.searchArr)\r\n    })\r\n  }, [])\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (navbarSearch === true) {\r\n      setNavbarSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!navbarSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to close search on ESC & ENTER Click\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setNavbarSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle search suggestion Click\r\n  const handleSuggestionItemClick = () => {\r\n    setNavbarSearch(false)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle search list Click\r\n  const handleListItemClick = (func, link, e) => {\r\n    func(link, e)\r\n    setTimeout(() => {\r\n      setNavbarSearch(false)\r\n    }, 1)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  return (\r\n    <NavItem className='nav-search' onClick={() => setNavbarSearch(true)}>\r\n      <NavLink className='nav-link-search'>\r\n        <Icon.Search className='ficon' />\r\n      </NavLink>\r\n      <div\r\n        className={classnames('search-input', {\r\n          open: navbarSearch === true\r\n        })}\r\n      >\r\n        <div className='search-input-icon'>\r\n          <Icon.Search />\r\n        </div>\r\n        {navbarSearch ? (\r\n          <Autocomplete\r\n            className='form-control'\r\n            suggestions={suggestions}\r\n            filterKey='title'\r\n            filterHeaderKey='groupTitle'\r\n            grouped={true}\r\n            placeholder='Explore Vuexy...'\r\n            autoFocus={true}\r\n            onSuggestionItemClick={handleSuggestionItemClick}\r\n            externalClick={handleExternalClick}\r\n            clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n            onKeyDown={onKeyDown}\r\n            onChange={e => dispatch(handleSearchQuery(e.target.value))}\r\n            customRender={(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\r\n              const IconTag = Icon[item.icon ? item.icon : 'X']\r\n              return (\r\n                <li\r\n                  className={classnames('suggestion-item', {\r\n                    active: filteredData.indexOf(item) === activeSuggestion\r\n                  })}\r\n                  key={i}\r\n                  onClick={e => handleListItemClick(onSuggestionItemClick, item.link, e)}\r\n                  onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                >\r\n                  <div\r\n                    className={classnames({\r\n                      'd-flex justify-content-between align-items-center': item.file || item.img\r\n                    })}\r\n                  >\r\n                    <div className='item-container d-flex'>\r\n                      {item.icon ? (\r\n                        <IconTag size={17} />\r\n                      ) : item.file ? (\r\n                        <img src={item.file} height='36' width='28' alt={item.title} />\r\n                      ) : item.img ? (\r\n                        <img className='rounded-circle mt-25' src={item.img} height='28' width='28' alt={item.title} />\r\n                      ) : null}\r\n                      <div className='item-info ml-1'>\r\n                        <p className='align-middle mb-0'>{item.title}</p>\r\n                        {item.by || item.email ? (\r\n                          <small className='text-muted'>{item.by ? item.by : item.email ? item.email : null}</small>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                    {item.size || item.date ? (\r\n                      <div className='meta-container'>\r\n                        <small className='text-muted'>{item.size ? item.size : item.date ? item.date : null}</small>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </li>\r\n              )\r\n            }}\r\n          />\r\n        ) : null}\r\n        <div className='search-input-close'>\r\n          <Icon.X\r\n            className='ficon'\r\n            onClick={e => {\r\n              e.stopPropagation()\r\n              setNavbarSearch(false)\r\n              handleClearQueryInStore()\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  )\r\n}\r\n\r\nexport default NavbarSearch\r\n","// ** Dropdowns Imports\r\nimport UserDropdown from './UserDropdown'\r\nimport NavbarSearch from './NavbarSearch'\r\nimport NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon } from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className='nav navbar-nav align-items-center ml-auto'>\r\n      {/*\r\n      <NavItem className='d-none d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem>\r\n    */}\r\n      <NavbarSearch />\r\n      <UserDropdown />\r\n    </ul>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport Autocomplete from '@components/autocomplete'\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/actions/navbar'\r\n\r\nconst NavbarBookmarks = props => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map(item => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {store.bookmarks\r\n                  .map(item => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='mr-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      <ul className='nav navbar-nav bookmark-icons'>\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\r\n                        active: filteredData.indexOf(item) === activeSuggestion\r\n                      })}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='mr-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-right', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\nimport NavbarBookmarks from './NavbarBookmarks'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\r\n      </div>\r\n      <NavbarUser skin={skin} setSkin={setSkin} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","import { Home, Activity, ShoppingCart } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboards',\r\n    title: 'Dashboard',\r\n    navLink: '/dashboard',\r\n    icon: <Home />,\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'clients',\r\n    title: 'Clientes',\r\n    type: 'item',\r\n    icon: <Icon.Users size={16} />,\r\n    navLink: '/clients',\r\n    permissions: ['admin']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'apps',\r\n    title: 'Realizar Pedido',\r\n    type: 'item',\r\n    icon: <Icon.Package size={16} />,\r\n    navLink: '/create_order',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  },\r\n  {\r\n    id: 'uiElements',\r\n    title: 'Mis Pedidos',\r\n    type: 'item',\r\n    icon: <Icon.Layers size={16} />,\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives'],\r\n    navLink: '/orders'\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'forms-tables',\r\n    title: 'Productos',\r\n    type: 'item',\r\n    icon: <Icon.Edit size={16} />,\r\n    navLink: '/products',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'pages',\r\n    title: 'Noticias',\r\n    type: 'item',\r\n    icon: <Icon.FileText size={16} />,\r\n    navLink: '/news/offers',\r\n    permissions: ['admin']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'charts-maps',\r\n    title: 'Contacto',\r\n    type: 'item',\r\n    icon: <Icon.PieChart size={16} />,\r\n    navLink: '/contact',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","// ** Navigation sections imports\r\nimport dashboards from './dashboards'\r\nimport clients from './clients'\r\nimport orders from './orders'\r\nimport products from './products'\r\nimport news from './news'\r\nimport contact from './contact'\r\n\r\n// ** Merge & Export\r\nexport default [\r\n  ...dashboards,\r\n  ...clients,\r\n  ...orders,\r\n  ...products,\r\n  ...news,\r\n  ...contact\r\n  // ...apps,\r\n  // ...uiElements,\r\n  // ...formsAndTables,\r\n  // ...pages,\r\n  // ...chartsAndMaps,\r\n  // ...others\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps &&\r\n      routerProps.meta &&\r\n      routerProps.meta.navLink &&\r\n      routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (\r\n      child.children &&\r\n      (children = search(child.children, currentURL, routerProps))\r\n    ) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild =\r\n    item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\nimport { FormattedMessage } from 'react-intl'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (\n                  match.url &&\n                  match.url !== '' &&\n                  match.url === item.navLink\n                ) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem\n            ? resetActiveGroup(item.navLink)\n            : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>\n          <FormattedMessage id={item.title} />\n        </span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>\r\n        <FormattedMessage id={item.header} />\r\n      </span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Ability Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Utils\r\nimport {\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (!item.permissions.includes('others')) {\r\n      if (item.permissions.includes(props.usertype)) {\r\n        const TagName = Components[resolveNavItemComponent(item)]\r\n        if (item.children) {\r\n          return <TagName item={item} index={index} key={item.id} {...props} />\r\n        }\r\n        return <TagName item={item} index={index} key={item.id} {...props} />\r\n      }\r\n    }\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Sidebar = props => {\r\n  const auth = useSelector(state => state.auth)\r\n  // ** States\r\n  const usertype = auth.userData.type\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames(\r\n          'main-menu menu-fixed menu-accordion menu-shadow',\r\n          {\r\n            expanded: menuHover || menuCollapsed === false,\r\n            'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n            'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n          }\r\n        )}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader\r\n              setGroupOpen={setGroupOpen}\r\n              menuHover={menuHover}\r\n              {...props}\r\n            />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={navigation}\r\n                  groupActive={groupActive}\r\n                  setGroupActive={setGroupActive}\r\n                  activeItem={activeItem}\r\n                  setActiveItem={setActiveItem}\r\n                  groupOpen={groupOpen}\r\n                  setGroupOpen={setGroupOpen}\r\n                  routerProps={routerProps}\r\n                  menuCollapsed={menuCollapsed}\r\n                  menuHover={menuHover}\r\n                  currentActiveItem={currentActiveItem}\r\n                  usertype={usertype}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  handleMenuCollapsed,\r\n  handleContentWidth,\r\n  handleMenuHidden\r\n} from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const {\r\n    children,\r\n    navbar,\r\n    footer,\r\n    menu,\r\n    routerProps,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition =\r\n    navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] ||\r\n          'navbar-floating'} ${footerClasses[footerType] || 'footer-static'}`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[\r\n            navbarType\r\n          ] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar\r\n          ) : (\r\n            <NavbarComponent\r\n              setMenuVisibility={setMenuVisibility}\r\n              skin={skin}\r\n              setSkin={setSkin}\r\n            />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(\r\n          `footer footer-light ${footerClasses[footerType] || 'footer-static'}`,\r\n          {\r\n            'd-none': footerType === 'hidden'\r\n          }\r\n        )}\r\n      >\r\n        {footer ? (\r\n          footer\r\n        ) : (\r\n          <FooterComponent\r\n            footerType={footerType}\r\n            footerClasses={footerClasses}\r\n          />\r\n        )}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default VerticalLayout\r\n","import { Home, Activity, ShoppingCart } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboards',\r\n    title: 'Dashboard',\r\n    navLink: '/dashboard',\r\n    icon: <Home />,\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'clients',\r\n    title: 'Clientes',\r\n    type: 'item',\r\n    icon: <Icon.Users size={16} />,\r\n    navLink: '/clients',\r\n    permissions: ['admin']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'apps',\r\n    title: 'Realizar Pedido',\r\n    type: 'item',\r\n    icon: <Icon.Package size={16} />,\r\n    navLink: '/create_order',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  },\r\n  {\r\n    id: 'uiElements',\r\n    title: 'Mis Pedidos',\r\n    type: 'item',\r\n    icon: <Icon.Layers size={16} />,\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives'],\r\n    navLink: '/orders'\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'forms-tables',\r\n    title: 'Productos',\r\n    type: 'item',\r\n    icon: <Icon.Edit size={16} />,\r\n    navLink: '/products',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'pages',\r\n    title: 'Noticias',\r\n    type: 'item',\r\n    icon: <Icon.FileText size={16} />,\r\n    navLink: '/news/offers',\r\n    permissions: ['admin']\r\n  }\r\n]\r\n","import * as Icon from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'charts-maps',\r\n    title: 'Contacto',\r\n    type: 'item',\r\n    icon: <Icon.PieChart size={16} />,\r\n    navLink: '/contact',\r\n    permissions: ['admin', 'user', 'personal', 'friend', 'relatives']\r\n  }\r\n]\r\n","// ** Navigation sections imports\r\nimport dashboards from './dashboards'\r\nimport clients from './clients'\r\nimport orders from './orders'\r\nimport products from './products'\r\nimport news from './news'\r\nimport contact from './contact'\r\n\r\n// ** Merge & Export\r\nexport default [\r\n  ...dashboards,\r\n  ...clients,\r\n  ...orders,\r\n  ...products,\r\n  ...news,\r\n  ...contact\r\n  // ...apps,\r\n  // ...uiElements,\r\n  // ...formsAndTables,\r\n  // ...pages,\r\n  // ...chartsAndMaps,\r\n  // ...others\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { DropdownItem } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setGroupActive,\r\n    activeItem,\r\n    setActiveItem,\r\n    routerProps,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = {\r\n    setMaxHeight: {\r\n      enabled: true,\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          ddTop = data.instance.reference.getBoundingClientRect().top,\r\n          ddHeight = data.popper.height\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = data.instance.popper.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        return {\r\n          ...data,\r\n          styles: {\r\n            ...stylesObj\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active':\r\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      toggle={() => onMouseEnter(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n        onClick={e => e.preventDefault()}\r\n      >\r\n        {item.icon}\r\n        <span>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n      </DropdownToggle>\r\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Ability Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport {\r\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    if (!item.permissions.includes('others')) {\r\n      if (item.permissions.includes(props.usertype)) {\r\n        const TagName = Components[resolveNavItemComponent(item)]\r\n        if (item.children) {\r\n          return <TagName item={item} index={index} key={item.id} {...props} />\r\n        }\r\n        return <TagName item={item} index={index} key={item.id} {...props} />\r\n      }\r\n    }\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// ** Horizontal Menu Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\r\n  const auth = useSelector(state => state.auth)\r\n  // ** States\r\n  const usertype = auth.userData.type\r\n  const [activeItem, setActiveItem] = useState(null)\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [openDropdown, setOpenDropdown] = useState([])\r\n\r\n  // ** On mouse enter push the ID to openDropdown array\r\n  const onMouseEnter = id => {\r\n    const arr = openDropdown\r\n    arr.push(id)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  // ** On mouse leave remove the ID to openDropdown array\r\n  const onMouseLeave = id => {\r\n    const arr = openDropdown\r\n    arr.splice(arr.indexOf(id), 1)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems\r\n          submenu={false}\r\n          items={navigation}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          openDropdown={openDropdown}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n          usertype={usertype}\r\n        />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport BuyNow from './components/BuyNow'\r\nimport Customizer from '@components/customizer'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const {\r\n    children,\r\n    navbar,\r\n    footer,\r\n    menu,\r\n    currentActiveItem,\r\n    routerProps\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition =\r\n    navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[\r\n          navbarType\r\n        ] || 'navbar-floating'} ${footerClasses[footerType] ||\r\n          'footer-static'} menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        className={classnames(\r\n          'header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center',\r\n          {\r\n            'navbar-scrolled': navbarScrolled\r\n          }\r\n        )}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <div className='brand-logo mr-50' />\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(\r\n              `header-navbar navbar-horizontal navbar-shadow menu-border`,\r\n              {\r\n                [navbarClasses[navbarType]]: navbarType !== 'static',\r\n                'floating-nav':\r\n                  (!navbarClasses[navbarType] && navbarType !== 'static') ||\r\n                  navbarType === 'floating'\r\n              }\r\n            )}\r\n          >\r\n            {menu ? (\r\n              menu\r\n            ) : (\r\n              <MenuComponent\r\n                routerProps={routerProps}\r\n                currentActiveItem={currentActiveItem}\r\n              />\r\n            )}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(\r\n          `footer footer-light ${footerClasses[footerType] || 'footer-static'}`,\r\n          {\r\n            'd-none': footerType === 'hidden'\r\n          }\r\n        )}\r\n      >\r\n        {footer ? (\r\n          footer\r\n        ) : (\r\n          <FooterComponent\r\n            footerType={footerType}\r\n            footerClasses={footerClasses}\r\n          />\r\n        )}\r\n      </footer>\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\nconst HorizontalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\n// import { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n  const auth = useSelector(state => state.auth)\r\n  const isUserLoggedIn = () => {\r\n    return auth.isAuthenticated.authenticated\r\n  }\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action = `[{action:'manage',subject:'all'}]`\r\n    let resource = `[{action:'manage',subject:'all'}]`\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !true) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      console.log(route)\r\n      console.log('gaaa')\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                appLayout: route.appLayout\r\n                              }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                routeMeta: route.meta\r\n                              }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                wrapperClass: route.className\r\n                              }\r\n                              : {})}\r\n                          /*eslint-enable */\r\n                          >\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport { Suspense, useContext, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Spinner } from 'reactstrap'\r\nimport { firstLoadingAuth } from './redux/actions/auth'\r\nimport Router from './router/Router'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\nconst App = () => {\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const login = useSelector((state) => state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const loadAuth = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userData\"))\r\n    if (user) {\r\n      dispatch(firstLoadingAuth())\r\n    }\r\n  }\r\n\r\n  useEffect(() => loadAuth(), [])\r\n\r\n  const loading = login.isAuthenticated.initializing\r\n\r\n  return loading ? <Suspense fallback={<Spinner />} /> : <Router />\r\n}\r\n\r\nexport default App\r\n","// Initialize Firebase\r\nexport const config = {\r\n  apiKey: \"AIzaSyACOg2ZuGNygWL5bqJbdURdk9-ivqdUQS4\",\r\n  authDomain: \"mr-perkins-c8177.firebaseapp.com\",\r\n  databaseURL: \"https://mr-perkins-c8177.firebaseio.com\",\r\n  projectId: \"mr-perkins-c8177\",\r\n  storageBucket: \"mr-perkins-c8177.appspot.com\",\r\n  messagingSenderId: \"1036451152671\",\r\n  appId: \"1:1036451152671:web:02df7fc486bb56fe7d662a\",\r\n  measurementId: \"G-TPCQCJHDEV\"\r\n}\r\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport { config as firebaseConfig } from '@src/auth/firebase/firebaseConfig'\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig)\n}\nconst SecondaryApp = firebase.initializeApp(firebaseConfig, 'secondary')\nexport const SecondaryAuth = SecondaryApp.auth()\nexport const firebaseAuth = firebase.auth()\nexport const firestore = firebase.firestore()\nexport const storage = firebase.storage()\n\nexport default firebase\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => {\r\n  // localStorage.getItem('userData')\r\n  return false\r\n}\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    color,\r\n    className,\r\n    imgClassName,\r\n    initials,\r\n    size,\r\n    badgeUp,\r\n    content,\r\n    icon,\r\n    badgeColor,\r\n    badgeText,\r\n    img,\r\n    imgHeight,\r\n    imgWidth,\r\n    status,\r\n    tag: Tag,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    let fullword = results.join('')\r\n    if (fullword.length > 3) {\r\n      fullword = fullword.substr(0, 3)\r\n    }\r\n    return fullword\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge\r\n              color={badgeColor ? badgeColor : 'primary'}\r\n              className='badge-sm badge-up'\r\n              pill\r\n            >\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  imgClassName: Proptypes.string,\r\n  className: Proptypes.string,\r\n  src: Proptypes.string,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  icon: Proptypes.node,\r\n  contentStyles: Proptypes.object,\r\n  badgeText: Proptypes.string,\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials (props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (\r\n      typeof props['initials'] !== 'boolean' &&\r\n      props['initials'] !== undefined\r\n    ) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** UseJWT import to get config\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport firebase, {\r\n  firebaseAuth,\r\n  firestore,\r\n  SecondaryAuth\r\n} from '../../../utility/firebase'\r\n\r\nconst config = useJwt.jwtConfig\r\n\r\n// Init firebase if not already initialized\r\n\r\n// ** Handle User Logout\r\nexport const handleLogout = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n      [config.storageTokenKeyName]: null,\r\n      [config.storageRefreshTokenKeyName]: null\r\n    })\r\n\r\n    // ** Remove user, accessToken & refreshToken from localStorage\r\n    localStorage.removeItem('userData')\r\n    // localStorage.removeItem(config.storageTokenKeyName)\r\n    // localStorage.removeItem(config.storageRefreshTokenKeyName)\r\n  }\r\n}\r\nexport const submitRegisterWithFireBase = (username, email, password) => {\r\n  console.log(email, password)\r\n  return () => {\r\n    return firebaseAuth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(user => {\r\n        firebaseAuth.signOut()\r\n        firestore\r\n          .collection('users')\r\n          .doc(user.user.uid)\r\n          .set({\r\n            name: username,\r\n            email,\r\n            status: 'pending',\r\n            created: new Date(),\r\n            type: 'user'\r\n          })\r\n        user.user.updateProfile({\r\n          displayName: username,\r\n          photoURL: 'user'\r\n        })\r\n        return user\r\n      })\r\n  }\r\n}\r\nfunction RetriveLoginData (dispatch, user) {\r\n  if (user.uid) {\r\n    firestore\r\n      .collection('users')\r\n      .doc(user.uid)\r\n      .get()\r\n      .then(localUser => {\r\n        if (localUser.exists) {\r\n          dispatch({\r\n            type: 'LOGIN_WITH_EMAIL',\r\n            payload: {\r\n              type: localUser.data().type,\r\n              user: localUser.data(),\r\n              id: localUser.id,\r\n              isSignedIn: true,\r\n              loggedInWith: 'firebase'\r\n            }\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  } else {\r\n    if (user.photoURL) {\r\n      dispatch({\r\n        type: 'LOGIN_WITH_EMAIL',\r\n        payload: {\r\n          type: user.photoURL,\r\n          user,\r\n          isSignedIn: true,\r\n          loggedInWith: 'firebase'\r\n        }\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: 'LOGIN_WITH_EMAIL',\r\n        payload: {\r\n          type: 'admin',\r\n          user,\r\n          isSignedIn: true,\r\n          loggedInWith: 'firebase'\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  localStorage.setItem('userData', JSON.stringify(user))\r\n}\r\n// Login firebase\r\nexport const submitLoginWithFireBase = (email, password, remember) => {\r\n  return dispatch => {\r\n    firebaseAuth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        firebaseAuth.onAuthStateChanged(user => {\r\n          // result.user.updateProfile({\r\n          //   displayName: \"Admin\"\r\n          // })\r\n          const name = result.user.displayName\r\n\r\n          if (user) {\r\n            RetriveLoginData(dispatch, user)\r\n          }\r\n          // validar remember\r\n          if (user && remember) {\r\n            firebase\r\n              .auth()\r\n              .setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n              .then(() => {\r\n                dispatch({\r\n                  type: 'LOGIN_WITH_EMAIL',\r\n                  payload: {\r\n                    email: userEmail,\r\n                    name,\r\n                    isSignedIn: loggedIn,\r\n                    remember: true,\r\n                    loggedInWith: 'firebase'\r\n                  }\r\n                })\r\n              })\r\n            localStorage.setItem('userData', JSON.stringify(user))\r\n          }\r\n          console.log('Login correcto!!!')\r\n        })\r\n      })\r\n      .catch(() => {\r\n        console.log('Email y/o contraseña incorrectos')\r\n      })\r\n  }\r\n}\r\n\r\nexport const firstLoadingAuth = () => {\r\n  return dispatch => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      RetriveLoginData(dispatch, user)\r\n      dispatch({\r\n        type: 'CHANGE_AUTHENTICATED',\r\n        payload: {\r\n          authenticated: !!user,\r\n          initializing: false\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n"],"sourceRoot":""}