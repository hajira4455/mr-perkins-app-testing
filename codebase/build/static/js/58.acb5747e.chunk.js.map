{"version":3,"sources":["views/Application/news.js","redux/actions/offers/index.js"],"names":["MySwal","withReactContent","Swal","NewsAndOffers","useState","allOffers","setAllOffers","offers","useSelector","state","dispatch","useDispatch","useEffect","GetOffersData","md","className","onSubmit","e","preventDefault","data","FormData","target","form","entries","key","value","CreateOffer","then","res","fire","title","customClass","confirmButton","showClass","popup","buttonsStyling","encType","for","type","name","id","placeholder","length","map","item","left","href","style","width","height","backgroundImage","image","backgroundRepeat","backgroundPosition","backgroundSize","body","heading","captions","color","onClick","text","icon","showCancelButton","confirmButtonText","cancelButton","result","deleteOffer","outline","size","offer","a","ref","firestore","collection","fileName","Math","random","toString","file","uploadTask","storage","put","on","snapShot","console","log","err","child","getDownloadURL","fireBaseUrl","add","success","get","records","docs","record","push","catch","alert","doc","delete","getStore"],"mappings":"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","file":"static/js/58.acb5747e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  CardTitle,\n  CardBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Media\n} from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nimport { X } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  CreateOffer,\n  GetOffersData,\n  deleteOffer\n} from '../../redux/actions/offers'\nconst NewsAndOffers = () => {\n  const [allOffers, setAllOffers] = useState([])\n  const { offers } = useSelector(state => state.offers)\n  const dispatch = useDispatch()\n  const formSubmit = e => {\n    e.preventDefault()\n    const data = new FormData(e.target)\n    const form = {}\n    for (const [key, value] of data.entries()) {\n      form[key] = value\n    }\n    dispatch(CreateOffer(form)).then(res => {\n      MySwal.fire({\n        title: 'Offer Saved',\n        customClass: {\n          confirmButton: 'btn btn-primary'\n        },\n        showClass: {\n          popup: 'animate__animated animate__bounceIn'\n        },\n        buttonsStyling: false\n      })\n    })\n  }\n  useEffect(() => {\n    dispatch(GetOffersData())\n  }, [])\n\n  useEffect(() => {\n    setAllOffers(offers)\n  }, [offers])\n\n  const handleConfirmText = id => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    })\n      .then(result => {\n        dispatch(deleteOffer(id))\n        return result\n      })\n      .then(function (result) {\n        if (result.value) {\n          MySwal.fire({\n            icon: 'success',\n            title: 'Deleted!',\n            text: 'Your file has been deleted.',\n            customClass: {\n              confirmButton: 'btn btn-success'\n            }\n          })\n        }\n      })\n  }\n  return (\n    <div>\n      <Row>\n        <Col md={6}>\n          <Card className='p-2'>\n            <CardTitle>Create New Offer</CardTitle>\n            <CardBody>\n              <Form onSubmit={formSubmit} encType='multipart/form-data'>\n                <FormGroup className='mb-2 mr-sm-2 mb-sm-0'>\n                  <Label for='image' className='mr-sm-2'>\n                    Offer Image\n                  </Label>\n                  <Input type='file' name='image' id='image' />\n                </FormGroup>\n                <FormGroup className='mb-2 mr-sm-2'>\n                  <Label for='captions' className='mr-sm-2'>\n                    Caption\n                  </Label>\n                  <Input\n                    type='text'\n                    name='captions'\n                    id='captions'\n                    placeholder='caption title for image'\n                  />\n                </FormGroup>\n                <FormGroup className='mb-2 mr-sm-2'>\n                  <Label for='validTill' className='mr-sm-2'>\n                    Valid Till\n                  </Label>\n                  <Input\n                    type='text'\n                    name='validTill'\n                    id='validTill'\n                    placeholder='Validitiy of the offer'\n                  />\n                </FormGroup>\n                <Button>Submit</Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <Card className='p-2'>\n            <CardTitle>All Offers</CardTitle>\n            <CardBody>\n              <div className='singleOffer'>\n                {allOffers.length > 0 &&\n                  allOffers.map(item => {\n                    return (\n                      <Row key={item.id}>\n                        <Col md={11}>\n                          <Media>\n                            <Media left href='#'>\n                              <div\n                                className='imagedisplayer'\n                                style={{\n                                  width: '300px',\n                                  height: '300px',\n                                  backgroundImage: `url(${item.image})`,\n                                  backgroundRepeat: 'no-repeat',\n                                  backgroundPosition: 'center',\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                              {/* <Media\n                                object\n                                src={item.image}\n                                height='300'\n                                width='300'\n                                alt='Generic placeholder image'\n                              /> */}\n                            </Media>\n                            <Media body>\n                              <Media heading>{item.captions}</Media>\n                            </Media>\n                          </Media>\n                        </Col>\n                        <Col md={1}>\n                          <Button\n                            color='primary'\n                            onClick={() => {\n                              handleConfirmText(item.id)\n                            }}\n                            outline\n                            size='sm'\n                          >\n                            <X size={14} className='mr-25'></X>\n                          </Button>\n                        </Col>\n                      </Row>\n                    )\n                  })}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default NewsAndOffers\n","import { firestore, storage } from '@src/utility/firebase'\nexport const CreateOffer = offer => {\n  return async dispatch => {\n    const ref = firestore.collection('offers')\n    const fileName = (Math.random() * 1e32).toString(36)\n    if (offer.image) {\n      const file = offer.image\n      const uploadTask = storage.ref(`/images/${fileName}`).put(file)\n      // return file.name\n      await uploadTask.on(\n        'state_changed',\n        snapShot => {\n          console.log(snapShot)\n          //takes a snap shot of the process as it is happening\n        },\n        err => {\n          //catches the errors\n          console.log(err)\n          console.log(err)\n        },\n        () => {\n          // gets the functions from storage refences the image storage in firebase by the children\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\n          storage\n            .ref('images')\n            .child(fileName)\n            .getDownloadURL()\n            .then(fireBaseUrl => {\n              offer.image = fireBaseUrl\n              ref.add(offer).then(success => {\n                ref.get().then(data => {\n                  const records = []\n                  data.docs.map(item => {\n                    const record = item.data()\n                    record.id = item.id\n                    records.push(record)\n                  })\n                  return dispatch({\n                    type: 'GET_ALL_OFFERS',\n                    data: records\n                  })\n                })\n              })\n            })\n            .catch(err => {\n              console.log(err)\n            })\n        }\n      )\n    } else {\n      alert('image not found')\n    }\n  }\n}\n\n// ** Delete Invoice\nexport const deleteOffer = id => {\n  return async dispatch => {\n    const ref = firestore.collection('offers')\n    const dlt = await ref.doc(id).delete()\n    return dispatch({\n      type: 'Offer_Delete',\n      id\n    })\n  }\n}\nexport const GetOffersData = id => {\n  return (dispatch, getStore) => {\n    const ref = firestore.collection('offers')\n    ref.get().then(data => {\n      const records = []\n      data.docs.map(item => {\n        const record = item.data()\n        record.id = item.id\n        records.push(record)\n      })\n      return dispatch({\n        type: 'GET_ALL_OFFERS',\n        data: records\n      })\n    })\n  }\n}\n"],"sourceRoot":""}