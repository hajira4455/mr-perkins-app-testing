{"version":3,"sources":["views/apps/user/list/Sidebar.js","views/apps/user/list/columns.js","views/apps/user/list/Table.js","views/apps/user/list/index.js","views/apps/user/store/action/index.js","views/apps/invoice/store/actions/index.js","@core/components/sidebar/index.js"],"names":["SidebarNewUsers","open","toggleSidebar","LoadData","useState","role","setRole","type","setType","dispatch","useDispatch","useForm","register","errors","handleSubmit","size","title","headerClassName","contentClassName","Form","onSubmit","values","isObjEmpty","addUser","password","name","businessName","phone","contact","email","status","business","img","then","res","console","log","FormGroup","Label","for","className","Input","id","placeholder","innerRef","required","classnames","FormText","color","value","onChange","e","target","Button","outline","onClick","columns","props","allData","useSelector","state","invoice","minWidth","selector","sortable","cell","row","to","store","getUser","length","substring","maxWidth","Badge","pill","filter","item","userID","Date","created","seconds","getMonth","category","Array","from","_","i","map","index","style","fill","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","Link","deleteUser","getData","q","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","handleCategoryChange","starvalue","Row","Col","xl","CustomInput","width","padding","backgroundPosition","Ripple","UsersList","users","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","getAllData","page","perPage","useEffect","data","Card","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","parseInt","currentTarget","val","Sidebar","setInvoices","Table","a","firestore","collection","get","snap","records","docs","record","push","params","queryLowered","toLowerCase","filteredData","getState","includes","response","paginateArray","totalPages","ref","doc","exists","Data","selectedUser","getUserInvoices","invoiceRef","where","invoices","empty","invoicesarr","forEach","user","SecondaryAuth","createUserWithEmailAndPassword","CreateUser","updateProfile","displayName","photoURL","uid","set","userAdded","userFoundById","userFound","delete","signInWithEmailAndPassword","userLoggedn","currentUser","disableUserById","update","message","code","UpdateData","DataToUpdate","UpdateUser","userDetails","ShowToast","setShowToast","file","storage","random","toString","put","on","snapShot","_delegate","totalBytes","transfered","bytesTransferred","err","child","getDownloadURL","fireBaseUrl","SaveAndUpdateCategories","prices","categories","error","getStore","auth","userData","sort","sortCompare","reverse","SetInvoiceData","formID","product","details","qty","SetInvoiceDetails","client","SaveInvoice","createInvoice","invoiceCreatorDetails","products","add","newOrder","fullNewOrder","deleteInvoiceData","GetSingleInvoice","singleOrder","setInvoiceStatus","deleteInvoice","bodyClassName","wrapperClassName","children","closeBtn","rest","renderCloseBtn","isOpen","toggle","modalClassName","undefined","String","close"],"mappings":"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","file":"static/js/44.a9274b89.chunk.js","sourcesContent":["// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Button, FormGroup, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { addUser } from '../store/action'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar, LoadData }) => {\r\n  // ** States\r\n  const [role, setRole] = useState('user')\r\n  const [type, setType] = useState('horeca')\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = values => {\r\n    if (isObjEmpty(errors)) {\r\n      toggleSidebar()\r\n      dispatch(\r\n        addUser({\r\n          password: values.password,\r\n          name: values['name'],\r\n          type: role,\r\n          businessName: values.businessName,\r\n          phone: values.contact,\r\n          email: values.email,\r\n          status: 'active',\r\n          business: type,\r\n          img: ''\r\n        })\r\n      ).then(res => {\r\n        console.log(res)\r\n        LoadData()\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New User'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup>\r\n          <Label for='full-name'>\r\n            Full Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='name'\r\n            id='full-name'\r\n            placeholder='John Doe'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['full-name'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='businessName'>\r\n            Business Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='businessName'\r\n            id='businessName'\r\n            placeholder='Business Name'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['businessName'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='email'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            type='email'\r\n            name='email'\r\n            id='email'\r\n            placeholder='john.doe@example.com'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['email'] })}\r\n          />\r\n          <FormText color='muted'>\r\n            You can use letters, numbers & periods\r\n          </FormText>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='contact'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='contact'\r\n            id='contact'\r\n            placeholder='(397) 294-5153'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['contact'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='ruc'>\r\n            RUN or DNI <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            name='ruc'\r\n            id='ruc'\r\n            placeholder='RUC or DNI Number'\r\n            type=\"number\"\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['ruc'] })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='user-role'>User Role</Label>\r\n          <Input\r\n            type='select'\r\n            id='user-role'\r\n            name='user-role'\r\n            value={role}\r\n            onChange={e => setRole(e.target.value)}\r\n          >\r\n            <option value='empresa'>Empresa</option>\r\n            <option value='persona'>Persona</option>\r\n            <option value='admin'>Admin</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='user-role'>User Type</Label>\r\n          <Input\r\n            type='select'\r\n            id='user-role'\r\n            name='user-role'\r\n            value={type}\r\n            onChange={e => setType(e.target.value)}\r\n          >\r\n            <option value='horeca'>Horeca</option>\r\n            <option value='distribution'>Distribution</option>\r\n            <option value='retail_online'>Retail & Online</option>\r\n            <option value='friend'>Friend</option>\r\n            <option value='other'>Other</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='password'>\r\n            Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Input\r\n            type='password'\r\n            name='password'\r\n            id='password'\r\n            placeholder='password'\r\n            innerRef={register({ required: true })}\r\n            className={classnames({ 'is-invalid': errors['password'] })}\r\n          />\r\n        </FormGroup>\r\n        <Button type='submit' className='mr-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment } from 'react'\r\n// ** Custom Components\r\n\r\n// ** Store & Actions\r\nimport { getUser, getData, deleteUser } from '../store/action'\r\nimport { store } from '@store/storeConfig/store'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport {\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\nimport {\r\n  MoreVertical,\r\n  Star,\r\n  FileText,\r\n  Trash2,\r\n  Archive,\r\n  User,\r\n  Settings,\r\n  Briefcase\r\n} from 'react-feather'\r\n\r\nexport const columns = props => {\r\n  const { allData } = useSelector(state => state.invoice)\r\n  const lastMonthSales = id => {\r\n    if (allData.length > 0) {\r\n      const filteredData = allData.filter(item => item.userID === id)\r\n      const lmsData = filteredData.filter(item => {\r\n        return (\r\n          new Date(item.created.seconds * 1000).getMonth() ===\r\n          new Date().getMonth() - 1\r\n        )\r\n      })\r\n      return lmsData.length\r\n    }\r\n    return 0\r\n  }\r\n  const thisMonthSales = id => {\r\n    if (allData.length > 0) {\r\n      const filteredData = allData.filter(item => item.userID === id)\r\n      const lmsData = filteredData.filter(item => {\r\n        return (\r\n          new Date(item.created.seconds * 1000).getMonth() ===\r\n          new Date().getMonth()\r\n        )\r\n      })\r\n      return lmsData.length\r\n    }\r\n    return 0\r\n  }\r\n  function typeFinder (type) {\r\n    console.log(type)\r\n    if (type === 'admin') {\r\n      return (\r\n        <Fragment>\r\n          <Settings size='20' color='blue' className='mr-1' /> {type}\r\n        </Fragment>\r\n      )\r\n    }\r\n    if (type === 'empresa') {\r\n      return (\r\n        <Fragment>\r\n          <Briefcase size='20' color='green' className='mr-1' /> {type}\r\n        </Fragment>\r\n      )\r\n    }\r\n    if (type === 'persona') {\r\n      return (\r\n        <Fragment>\r\n          <User size='20' color='blue' className='mr-1' /> {type}\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n  return [\r\n    {\r\n      name: 'Name',\r\n      minWidth: '150px',\r\n      selector: 'name',\r\n      sortable: true,\r\n      cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          {/* {renderClient(row)} */}\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n              to={`/clients/view/${row.id}`}\r\n              className='user-name text-truncate mb-0'\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <span className='font-weight-bold'>\r\n                {row.name\r\n                  ? row.name.length > 15\r\n                    ? `${row.name.substring(0, 15)}...`\r\n                    : row.name\r\n                  : ''}\r\n              </span>\r\n            </Link>\r\n            <small className='text-truncate text-muted mb-0'>\r\n              @{' '}\r\n              {row.businessName\r\n                ? row.businessName.length > 15\r\n                  ? `${row.businessName.substring(0, 15)}...`\r\n                  : row.businessName\r\n                : ''}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: 'Email',\r\n      minWidth: '250px',\r\n      selector: 'email',\r\n      sortable: true,\r\n      cell: row => row.email\r\n    },\r\n    {\r\n      name: 'Type',\r\n      minWidth: '160px',\r\n      maxWidth: '200px',\r\n      selector: 'type',\r\n      sortable: true,\r\n      cell: row => typeFinder(row.type)\r\n    },\r\n    {\r\n      name: 'Last Month Sale',\r\n      maxWidth: '132px',\r\n      selector: 'role',\r\n      cell: row => (\r\n        <Badge color={'primary'} className='badge-sm' pill>\r\n          {` ${lastMonthSales(row.id)} orders`}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      name: 'This Month Sale',\r\n      maxWidth: '132px',\r\n      selector: 'role',\r\n      cell: row => (\r\n        <Badge color={'success'} className='badge-sm' pill>\r\n          {`${thisMonthSales(row.id)} orders`}\r\n        </Badge>\r\n      )\r\n    },\r\n    {\r\n      name: 'Category',\r\n      minWidth: '200px',\r\n      selector: 'category',\r\n      cell: row => (\r\n        <span className='text-capitalize'>\r\n          {row.category\r\n            ? Array.from({ length: 5 }, (_, i) => i + 1).map((item, index) => {\r\n                return (\r\n                  <Star\r\n                    key={`star${index}`}\r\n                    style={{ fill: index + 1 <= row.category ? '#7367f0' : '' }}\r\n                    color={index < row.category ? '#7367f0' : 'gray'}\r\n                  />\r\n                )\r\n              })\r\n            : Array.from({ length: 5 }, (_, i) => i + 1).map((item, index) => {\r\n                return <Star key={`starEmpty-${index}`} color='gray' />\r\n              })}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      maxWidth: '10px',\r\n      cell: row => (\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            <DropdownItem\r\n              tag={Link}\r\n              to={`/clients/view/${row.id}`}\r\n              className='w-100'\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='mr-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag={Link}\r\n              to={`/clients/edit/${row.id}`}\r\n              className='w-100'\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <Archive size={14} className='mr-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              className='w-100'\r\n              onClick={() =>\r\n                store.dispatch(deleteUser(row.id)).then(res => {\r\n                  store.dispatch(getData({ q: props.q }))\r\n                })\r\n              }\r\n            >\r\n              <Trash2 size={14} className='mr-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      )\r\n    }\r\n  ]\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, getData } from '../store/action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown, Plus } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  handleCategoryChange,\r\n  starvalue\r\n}) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='2' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <Label for='rows-per-page'>Show</Label>\r\n            <CustomInput\r\n              className='form-control mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{\r\n                width: '5rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition:\r\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n              }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </CustomInput>\r\n            <Label for='rows-per-page'>Entries</Label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='5'\r\n          className='d-flex align-items-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'\r\n        >\r\n          <div className=''>\r\n            <Label for='rows-per-page'>Show</Label>\r\n            <CustomInput\r\n              className='form-control mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              style={{\r\n                width: '6rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition:\r\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n              }}\r\n              onChange={e => handleCategoryChange(e.target.value)}\r\n              value={starvalue}\r\n            >\r\n              {Array.from({ length: 6 }, (_, i) => i).map(item => {\r\n                return (\r\n                  <option key={`opton-${item}`} value={item}>\r\n                    {item === 0 ? 'All Users' : `${item} star`}\r\n                  </option>\r\n                )\r\n              })}\r\n            </CustomInput>\r\n            <Label for='rows-per-page'>Users</Label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='5'\r\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-end flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 mr-1'>\r\n            <Label className='mb-0' for='search-invoice'>\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ml-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button.Ripple color='primary' size=\"sm\" onClick={toggleSidebar}>\r\n            <Plus />\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState(0)\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n  const LoadData = () => {\r\n    dispatch(getAllData()).then(() => {\r\n      dispatch(\r\n        getData({\r\n          page: currentPage,\r\n          perPage: rowsPerPage,\r\n          role: currentRole,\r\n          q: searchTerm\r\n        })\r\n      )\r\n    })\r\n  }\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    LoadData()\r\n  }, [dispatch, store.data.length])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        role: currentRole,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: value,\r\n        role: currentRole,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleCategoryChange = e => {\r\n    const value = parseInt(e)\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setCurrentRole(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole,\r\n        q: val\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={\r\n          'pagination react-paginate justify-content-end my-2 pr-1'\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole,\r\n      q: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (store.data.users && store.data.users.length > 0) {\r\n      return store.data.users\r\n    } else if (\r\n      store.data.users &&\r\n      store.data.users.length === 0 &&\r\n      isFiltered\r\n    ) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          subHeader\r\n          responsive\r\n          paginationServer\r\n          columns={columns({ q: searchTerm })}\r\n          sortIcon={<ChevronDown />}\r\n          className='react-dataTable'\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              toggleSidebar={toggleSidebar}\r\n              handlePerPage={handlePerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              searchTerm={searchTerm}\r\n              handleFilter={handleFilter}\r\n              handleCategoryChange={handleCategoryChange}\r\n              starvalue={currentRole}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n      <Sidebar\r\n        LoadData={LoadData}\r\n        open={sidebarOpen}\r\n        toggleSidebar={toggleSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport { useState, useEffect } from 'react'\r\nimport Table from './Table'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getData } from '../../invoice/store/actions'\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersList = () => {\r\n  const dispatch = useDispatch()\r\n  const { allData } = useSelector(state => state.invoice)\r\n  const [Invoices, setInvoices] = useState([])\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: 1,\r\n        perPage: 10,\r\n        status: '',\r\n        q: ''\r\n      })\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setInvoices(allData)\r\n  }, [allData.length])\r\n\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","import axios from 'axios'\r\nimport { firestore, SecondaryAuth, storage } from '@src/utility/firebase'\r\nimport { paginateArray } from '../../../../../@fake-db/utils'\r\nimport { store } from '../../../../../redux/storeConfig/store'\r\n// ** Get all Data\r\nexport const getAllData = () => {\r\n  return async dispatch => {\r\n    return await firestore\r\n      .collection('users')\r\n      .get()\r\n      .then(snap => {\r\n        const records = []\r\n        snap.docs.map(item => {\r\n          const record = item.data()\r\n          record.id = item.id\r\n          records.push(record)\r\n        })\r\n        dispatch({\r\n          type: 'GET_ALL_DATA',\r\n          data: records\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n// ** Get data on page or row change\r\nexport const getData = params => {\r\n  const { q = '', perPage = 10, page = 1, role = 0 } = params\r\n  return async dispatch => {\r\n    const queryLowered = q.toLowerCase()\r\n    let filteredData = store.getState().users.allData\r\n\r\n    if (queryLowered.length > 0) {\r\n      filteredData = filteredData.filter(item => {\r\n        if (item.name.toLowerCase().includes(queryLowered)) {\r\n          return item\r\n        }\r\n        if (item.email.toLowerCase().includes(queryLowered)) {\r\n          return item\r\n        }\r\n      })\r\n    }\r\n    if (role !== 0) {\r\n      filteredData = await filteredData.filter(\r\n        item => item.category && item.category === role\r\n      )\r\n    }\r\n    const response = {\r\n      users: paginateArray(filteredData, perPage, page)\r\n    }\r\n    dispatch({\r\n      type: 'GET_DATA',\r\n      data: response,\r\n      totalPages: filteredData.length,\r\n      params\r\n    })\r\n  }\r\n}\r\n\r\n// ** Get User\r\nexport const getUser = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('users').doc(id)\r\n    const doc = await ref.get()\r\n\r\n    if (!doc.exists) {\r\n      console.log('not found user')\r\n    }\r\n    const Data = doc.data()\r\n    Data.id = id\r\n    return dispatch({\r\n      type: 'GET_USER',\r\n      selectedUser: Data\r\n    })\r\n  }\r\n}\r\nexport const getUserInvoices = email => {\r\n  return async dispatch => {\r\n    const invoiceRef = firestore.collection('orders')\r\n    const invoices = await invoiceRef.where('email', '==', email).get()\r\n    if (invoices.empty) {\r\n      console.log('No matching documents.')\r\n    }\r\n    const invoicesarr = []\r\n    invoices.forEach(doc => {\r\n      const invoice = doc.data()\r\n      invoice.id = doc.id\r\n      invoicesarr.push(invoice)\r\n    })\r\n    return dispatch({\r\n      type: 'GET_USER_INVOICES_DATA',\r\n      data: invoicesarr\r\n    })\r\n  }\r\n}\r\n\r\n// ** Add new user\r\nexport const addUser = user => {\r\n  return async () => {\r\n    user.created = new Date()\r\n    const ref = firestore.collection('users')\r\n    const { email, password } = user\r\n    const CreateUser = await SecondaryAuth.createUserWithEmailAndPassword(\r\n      email,\r\n      password\r\n    )\r\n    await CreateUser.user.updateProfile({\r\n      displayName: user.name,\r\n      photoURL: 'user'\r\n    })\r\n    const userAdded = await ref.doc(CreateUser.user.uid).set(user)\r\n    return userAdded\r\n  }\r\n}\r\n\r\n// ** Delete user\r\nexport const deleteUser = id => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ref = firestore.collection('users').doc(id)\r\n      const userFoundById = await ref.get()\r\n      const userFound = userFoundById.data()\r\n      const email = userFound.email,\r\n        password = userFound.password ? userFound.password : 'zeeeshan'\r\n      await ref.delete()\r\n      const userLogin = await SecondaryAuth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      )\r\n\r\n      const userLoggedn = SecondaryAuth.currentUser\r\n      await userLoggedn.delete()\r\n      dispatch({\r\n        type: 'USER_DELETED',\r\n        id\r\n      })\r\n      return dispatch({\r\n        type: 'USER_DELETED',\r\n        id\r\n      })\r\n    } catch (error) {\r\n      return dispatch({\r\n        type: 'USER_DELETED',\r\n        id\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const disableUserById = (id, status) => {\r\n  return async () => {\r\n    try {\r\n      const ref = firestore.collection('users').doc(id)\r\n      await ref.update({ status })\r\n      return { message: 'user updated successfully', code: 200 }\r\n    } catch (error) {\r\n      return { message: 'user cannot be updated', code: 400 }\r\n    }\r\n  }\r\n}\r\nconst UpdateData = (id, DataToUpdate) => {\r\n  firestore\r\n    .collection('users')\r\n    .doc(id)\r\n    .update(DataToUpdate)\r\n}\r\nexport const UpdateUser = (\r\n  id,\r\n  userDetails,\r\n  ShowToast,\r\n  setShowToast,\r\n  file = null\r\n) => {\r\n  return async dispatch => {\r\n    if (file) {\r\n      const uploadTask = storage\r\n        .ref(`/images/${(Math.random() * 1e32).toString(36)}`)\r\n        .put(file)\r\n      uploadTask.on(\r\n        'state_changed',\r\n        snapShot => {\r\n          //takes a snap shot of the process as it is happening\r\n          if (!ShowToast.state) {\r\n            setShowToast({\r\n              state: true,\r\n              total: snapShot._delegate.totalBytes,\r\n              transfered: snapShot._delegate.bytesTransferred\r\n            })\r\n          }\r\n        },\r\n        err => {\r\n          //catches the errors\r\n          console.log(err)\r\n          return { message: 'data cannot be updated', code: 400 }\r\n        },\r\n        () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage\r\n            .ref('images')\r\n            .child(file.name)\r\n            .getDownloadURL()\r\n            .then(fireBaseUrl => {\r\n              setShowToast({\r\n                state: false,\r\n                total: 0,\r\n                transfered: 0\r\n              })\r\n              userDetails['img'] = fireBaseUrl\r\n              UpdateData(id, userDetails)\r\n              return { message: 'data updated successfully', code: 200 }\r\n            })\r\n        }\r\n      )\r\n    } else {\r\n      UpdateData(id, userDetails)\r\n      return { message: 'data updated successfully', code: 200 }\r\n    }\r\n  }\r\n}\r\n\r\nexport const SaveAndUpdateCategories = ({ id, prices }) => {\r\n  return async () => {\r\n    try {\r\n      const categories = { categories: prices }\r\n      UpdateData(id, categories)\r\n      return { message: 'user updated successfully', code: 200 }\r\n    } catch (error) {\r\n      return { message: 'user cannot be updated', code: 400, error }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { firestore } from '@src/utility/firebase'\r\nimport { paginateArray, sortCompare } from '../../../../../@fake-db/utils'\r\nimport { store } from '../../../../../redux/storeConfig/store'\r\n// ** Get data\r\n\r\nexport const getData = params => {\r\n  const { q = '', perPage = 10, page = 1, status = null } = params\r\n  const queryLowered = q.toLowerCase()\r\n  return async (dispatch, getStore) => {\r\n    const { userData } = await getStore().auth\r\n    const ref = firestore.collection('orders')\r\n    const type = userData.type\r\n    if (userData.user) {\r\n      const data =\r\n        type === 'admin'\r\n          ? await ref.get()\r\n          : userData.id\r\n          ? await ref.where('userID', '==', userData.id).get()\r\n          : null\r\n      const records = []\r\n      await data.docs.map(item => {\r\n        const record = item.data()\r\n        record.id = item.id\r\n        records.push(record)\r\n      })\r\n\r\n      const filteredData = records\r\n        .filter(\r\n          invoice =>\r\n            /* eslint-disable operator-linebreak, implicit-arrow-linebreak */\r\n            invoice.name &&\r\n            invoice.email &&\r\n            (invoice.name.toLowerCase().includes(queryLowered) ||\r\n              invoice.email.toLowerCase().includes(queryLowered) ||\r\n              invoice.userID.toLowerCase().includes(queryLowered))\r\n        )\r\n        .sort(sortCompare('id'))\r\n        .reverse()\r\n      dispatch({\r\n        type: 'GET_INVOICE_DATA',\r\n        data: paginateArray(filteredData, perPage, page),\r\n        allData: records,\r\n        totalPages: records.length,\r\n        params\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const SetInvoiceData = ({ formID, product }) => {\r\n  return dispatch => {\r\n    if (product.product) {\r\n      dispatch({\r\n        type: 'SET_FORM_DATA',\r\n        data: {\r\n          formID,\r\n          details: {\r\n            product: product.product,\r\n            qty: product.qty,\r\n            total: product.total\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const SetInvoiceDetails = client => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'INVOICE_CREATOR_DETAILS',\r\n      data: client\r\n    })\r\n  }\r\n}\r\nexport const SaveInvoice = data => {\r\n  return async (dispatch, getStore) => {\r\n    const { createInvoice, invoiceCreatorDetails } = getStore().invoice\r\n    const { userData } = getStore().auth\r\n    data.products = []\r\n    Object.keys(createInvoice).map(item => {\r\n      data.products.push(createInvoice[item])\r\n    })\r\n    data.userID = invoiceCreatorDetails.id\r\n      ? invoiceCreatorDetails.id\r\n      : userData.id\r\n    data.name =\r\n      userData.type === 'admin'\r\n        ? invoiceCreatorDetails.name\r\n        : userData.user.name\r\n    data.email =\r\n      userData.type === 'admin'\r\n        ? invoiceCreatorDetails.email\r\n        : userData.user.email\r\n    data.created = new Date()\r\n    data.status = 'unattended'\r\n\r\n    const ref = firestore.collection('orders')\r\n    const newOrder = await ref.add(data)\r\n    const fullNewOrder = await ref.doc(newOrder.id).get()\r\n    return fullNewOrder.data()\r\n  }\r\n}\r\nexport const deleteInvoiceData = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'DELETE_INVOICE_DATA',\r\n      data: id\r\n    })\r\n  }\r\n}\r\nexport const GetSingleInvoice = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const singleOrder = await ref.doc(id).get()\r\n    const data = singleOrder.data()\r\n    data.id = id\r\n    return dispatch({\r\n      type: 'GET_SINGLE_INVOICE',\r\n      data\r\n    })\r\n  }\r\n}\r\nexport const setInvoiceStatus = ({ id, state }) => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const foundOrder = await ref.doc(id).update({ state })\r\n    return 'invoiceUpdated'\r\n  }\r\n}\r\n// ** Delete Invoice\r\nexport const deleteInvoice = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const foundOrder = await ref.doc(id).delete()\r\n    return 'orderDeleted'\r\n  }\r\n}\r\n","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    width,\r\n    open,\r\n    toggleSidebar,\r\n    size,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    className,\r\n    title,\r\n    children,\r\n    closeBtn,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames({\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <ModalBody\r\n        className={classnames('flex-grow-1', {\r\n          [bodyClassName]: bodyClassName\r\n        })}\r\n      >\r\n        {children}\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  open: Proptypes.bool.isRequired,\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n"],"sourceRoot":""}