{"version":3,"sources":["views/apps/invoice/list/columns.js","views/apps/invoice/list/index.js","views/apps/invoice/store/actions/index.js"],"names":["ElementTotalCounter","Send","CheckCircle","Save","ArrowDownCircle","Info","PieChart","products","reduce","a","b","Number","productPrice","split","columns","props","name","minWidth","selector","cell","row","to","id","sortable","email","className","toLowerCase","total","elements","state","size","color","timestamp","date","Date","getDate","getMonth","getFullYear","dateParser","created","seconds","UncontrolledTooltip","placement","target","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","href","onClick","e","preventDefault","store","dispatch","deleteInvoice","then","res","console","log","getData","page","perPage","status","q","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","Row","Col","lg","Label","for","CustomInput","type","onChange","Button","Ripple","Link","Input","placeholder","InvoiceList","useDispatch","useSelector","invoice","useState","setValue","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","useEffect","data","length","Card","noHeader","pagination","paginationServer","subHeader","responsive","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","toFixed","pageCount","nextLabel","breakLabel","previousLabel","activeClassName","breakClassName","breakLinkClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","subHeaderComponent","val","parseInt","params","queryLowered","getStore","auth","userData","ref","firestore","collection","user","get","where","records","docs","map","item","record","push","filteredData","filter","includes","userID","sort","sortCompare","reverse","paginateArray","totalPages","SetInvoiceData","formID","product","details","qty","SetInvoiceDetails","client","SaveInvoice","createInvoice","invoiceCreatorDetails","add","newOrder","doc","fullNewOrder","deleteInvoiceData","GetSingleInvoice","singleOrder","setInvoiceStatus","update","delete"],"mappings":"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","file":"static/js/46.728df231.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { getData, deleteInvoice } from '../store/actions'\r\nimport { store } from '@store/storeConfig/store'\r\n\r\n// ** Third Party Components\r\nimport {\r\n  Badge,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap'\r\nimport {\r\n  Eye,\r\n  TrendingUp,\r\n  Send,\r\n  MoreVertical,\r\n  Download,\r\n  Edit,\r\n  Trash,\r\n  Copy,\r\n  CheckCircle,\r\n  Save,\r\n  ArrowDownCircle,\r\n  Info,\r\n  PieChart,\r\n  Check\r\n} from 'react-feather'\r\n\r\n// ** Vars\r\nconst invoiceStatusObj = {\r\n  Sent: { color: 'light-secondary', icon: Send },\r\n  Paid: { color: 'light-success', icon: CheckCircle },\r\n  Draft: { color: 'light-primary', icon: Save },\r\n  Downloaded: { color: 'light-info', icon: ArrowDownCircle },\r\n  'Past Due': { color: 'light-danger', icon: Info },\r\n  'Partial Payment': { color: 'light-warning', icon: PieChart }\r\n}\r\n\r\n// ** renders client column\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = [\r\n      'light-success',\r\n      'light-danger',\r\n      'light-warning',\r\n      'light-info',\r\n      'light-primary',\r\n      'light-secondary'\r\n    ],\r\n    color = states[stateNum]\r\n  return ''\r\n  // if (row.avatar.length) {\r\n  //   return <Avatar className='mr-50' img={row.avatar} width='32' height='32' />\r\n  // } else {\r\n  //   return <Avatar color={color} className='mr-50' content={row.client ? row.client.name : 'John Doe'} initials />\r\n  // }\r\n}\r\nconst dateParser = timestamp => {\r\n  const date = new Date(timestamp * 1000)\r\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`\r\n}\r\nconst TotalCounter = products => {\r\n  return products.reduce((a, b) => +a + +Number(b.total), 0)\r\n}\r\nconst ElementTotalCounter = products => {\r\n  return products.reduce(\r\n    (a, b) => +a + +Number(b.productPrice ? b.productPrice.split('/')[1] : '1'),\r\n    0\r\n  )\r\n}\r\nconst statusFinder = state => {\r\n  if (state === 'ENTREGADO') {\r\n    return (\r\n      <Fragment>\r\n        <Check size='20' color='green' className='mr-1' />\r\n        {state}\r\n      </Fragment>\r\n    )\r\n  } else {\r\n    return state\r\n  }\r\n}\r\n\r\n// ** Table columns\r\nexport const columns = props => {\r\n  return [\r\n    {\r\n      name: '#',\r\n      minWidth: '107px',\r\n      selector: 'id',\r\n      cell: row => <Link to={`/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\r\n    },\r\n\r\n    {\r\n      name: 'Client',\r\n      minWidth: '350px',\r\n      selector: 'client',\r\n      sortable: true,\r\n      cell: row => {\r\n        const name = row.name ? row.name : 'Name Not Present',\r\n          email = row.email ? row.email : 'EMAILNOTFOUND'\r\n        return (\r\n          <div className='d-flex justify-content-left align-items-center'>\r\n            {/* {renderClient(row)} */}\r\n            <div className='d-flex flex-column'>\r\n              <h6 className='user-name text-truncate text-capitalize mb-0'>\r\n                {name.toLowerCase()}\r\n              </h6>\r\n              <small className='text-truncate text-muted mb-0'>{email}</small>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Total',\r\n      selector: 'total',\r\n      sortable: true,\r\n      minWidth: '100px',\r\n      cell: row => (\r\n        <span>\r\n          $\r\n          {row.products\r\n            ? TotalCounter(row.products)\r\n            : ElementTotalCounter(row.elements) || 0}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: 'state',\r\n      sortable: true,\r\n      minWidth: '200px',\r\n      cell: row => statusFinder(row.state)\r\n    },\r\n    {\r\n      name: 'Issued Date',\r\n      selector: 'dueDate',\r\n      sortable: false,\r\n      minWidth: '200px',\r\n      cell: row =>\r\n        dateParser(row.created ? row.created.seconds : row.date.seconds)\r\n    },\r\n    {\r\n      name: 'Action',\r\n      minWidth: '110px',\r\n      selector: '',\r\n      sortable: true,\r\n      cell: row => (\r\n        <div className='column-action d-flex align-items-center'>\r\n          <Send size={17} id={`send-tooltip-${row.id}`} />\r\n          <UncontrolledTooltip\r\n            placement='top'\r\n            target={`send-tooltip-${row.id}`}\r\n          >\r\n            Send Mail\r\n          </UncontrolledTooltip>\r\n          <Link to={`/invoice/preview/${row.id}`} id={`pw-tooltip-${row.id}`}>\r\n            <Eye size={17} className='mx-1' />\r\n          </Link>\r\n          <UncontrolledTooltip placement='top' target={`pw-tooltip-${row.id}`}>\r\n            Preview Invoice\r\n          </UncontrolledTooltip>\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle tag='span'>\r\n              <MoreVertical size={17} className='cursor-pointer' />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              {/* <DropdownItem\r\n                  tag='a'\r\n                  href='/'\r\n                  className='w-100'\r\n                  onClick={e => e.preventDefault()}\r\n                >\r\n                  <Download size={14} className='mr-50' />\r\n                  <span className='align-middle'>Download</span>\r\n                </DropdownItem> */}\r\n              {/* <DropdownItem\r\n                  tag={Link}\r\n                  to={`/apps/invoice/edit/${row.id}`}\r\n                  className='w-100'\r\n                >\r\n                  <Edit size={14} className='mr-50' />\r\n                  <span className='align-middle'>Edit</span>\r\n                </DropdownItem> */}\r\n              <DropdownItem\r\n                tag='a'\r\n                href='/'\r\n                className='w-100'\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  store.dispatch(deleteInvoice(row.id)).then(res => {\r\n                    console.log(res)\r\n                    store.dispatch(\r\n                      getData({\r\n                        page: 1,\r\n                        perPage: 10,\r\n                        status: '',\r\n                        q: props.q\r\n                      })\r\n                    )\r\n                  })\r\n                }}\r\n              >\r\n                <Trash size={14} className='mr-50' />\r\n                <span className='align-middle'>Delete</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Button, Label, Input, CustomInput, Row, Col, Card } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { getData } from '../store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-invoice.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst CustomHeader = ({\r\n  handleFilter,\r\n  value,\r\n  handleStatusValue,\r\n  statusValue,\r\n  handlePerPage,\r\n  rowsPerPage\r\n}) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 py-2'>\r\n      <Row>\r\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\r\n          <div className='d-flex align-items-center mr-2'>\r\n            <Label for='rows-per-page'>Show</Label>\r\n            <CustomInput\r\n              className='form-control ml-50 pr-3'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </CustomInput>\r\n          </div>\r\n          <Button.Ripple tag={Link} to='/create_order' color='primary'>\r\n            Add New Record\r\n          </Button.Ripple>\r\n        </Col>\r\n        <Col\r\n          lg='6'\r\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pr-lg-1 p-0'\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <Label for='search-invoice'>Search</Label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ml-50 mr-2 w-100'\r\n              type='text'\r\n              value={value}\r\n              onChange={e => handleFilter(e.target.value)}\r\n              placeholder='Search Invoice'\r\n            />\r\n          </div>\r\n          <Input\r\n            className='w-auto '\r\n            type='select'\r\n            value={statusValue}\r\n            onChange={handleStatusValue}\r\n          >\r\n            <option value=''>Select Status</option>\r\n            <option value='downloaded'>Downloaded</option>\r\n            <option value='draft'>Draft</option>\r\n            <option value='paid'>Paid</option>\r\n            <option value='partial payment'>Partial Payment</option>\r\n            <option value='past due'>Past Due</option>\r\n            <option value='partial payment'>Partial Payment</option>\r\n          </Input>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InvoiceList = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.invoice)\r\n\r\n  const [value, setValue] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [statusValue, setStatusValue] = useState('')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue,\r\n        q: value\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  const handleFilter = val => {\r\n    setValue(val)\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue,\r\n        q: val\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePerPage = e => {\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: parseInt(e.target.value),\r\n        status: statusValue,\r\n        q: value\r\n      })\r\n    )\r\n    setRowsPerPage(parseInt(e.target.value))\r\n  }\r\n\r\n  const handleStatusValue = e => {\r\n    setStatusValue(e.target.value)\r\n    dispatch(\r\n      getData({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: e.target.value,\r\n        q: value\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        status: statusValue,\r\n        q: value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number((store.total / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        pageCount={count || 1}\r\n        nextLabel=''\r\n        breakLabel='...'\r\n        previousLabel=''\r\n        activeClassName='active'\r\n        breakClassName='page-item'\r\n        breakLinkClassName='page-link'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      status: statusValue,\r\n      q: value\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='invoice-list-wrapper'>\r\n      <Card>\r\n        <div className='invoice-list-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            subHeader={true}\r\n            columns={columns({ q: value })}\r\n            responsive={true}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            defaultSortField='invoiceId'\r\n            paginationDefaultPage={currentPage}\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                value={value}\r\n                statusValue={statusValue}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                handleStatusValue={handleStatusValue}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvoiceList\r\n","import axios from 'axios'\r\nimport { firestore } from '@src/utility/firebase'\r\nimport { paginateArray, sortCompare } from '../../../../../@fake-db/utils'\r\nimport { store } from '../../../../../redux/storeConfig/store'\r\n// ** Get data\r\n\r\nexport const getData = params => {\r\n  const { q = '', perPage = 10, page = 1, status = null } = params\r\n  const queryLowered = q.toLowerCase()\r\n  return async (dispatch, getStore) => {\r\n    const { userData } = await getStore().auth\r\n    const ref = firestore.collection('orders')\r\n    const type = userData.type\r\n    if (userData.user) {\r\n      const data =\r\n        type === 'admin'\r\n          ? await ref.get()\r\n          : userData.id\r\n          ? await ref.where('userID', '==', userData.id).get()\r\n          : null\r\n      const records = []\r\n      await data.docs.map(item => {\r\n        const record = item.data()\r\n        record.id = item.id\r\n        records.push(record)\r\n      })\r\n\r\n      const filteredData = records\r\n        .filter(\r\n          invoice =>\r\n            /* eslint-disable operator-linebreak, implicit-arrow-linebreak */\r\n            invoice.name &&\r\n            invoice.email &&\r\n            (invoice.name.toLowerCase().includes(queryLowered) ||\r\n              invoice.email.toLowerCase().includes(queryLowered) ||\r\n              invoice.userID.toLowerCase().includes(queryLowered))\r\n        )\r\n        .sort(sortCompare('id'))\r\n        .reverse()\r\n      dispatch({\r\n        type: 'GET_INVOICE_DATA',\r\n        data: paginateArray(filteredData, perPage, page),\r\n        allData: records,\r\n        totalPages: records.length,\r\n        params\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const SetInvoiceData = ({ formID, product }) => {\r\n  return dispatch => {\r\n    if (product.product) {\r\n      dispatch({\r\n        type: 'SET_FORM_DATA',\r\n        data: {\r\n          formID,\r\n          details: {\r\n            product: product.product,\r\n            qty: product.qty,\r\n            total: product.total\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\nexport const SetInvoiceDetails = client => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'INVOICE_CREATOR_DETAILS',\r\n      data: client\r\n    })\r\n  }\r\n}\r\nexport const SaveInvoice = data => {\r\n  return async (dispatch, getStore) => {\r\n    const { createInvoice, invoiceCreatorDetails } = getStore().invoice\r\n    const { userData } = getStore().auth\r\n    data.products = []\r\n    Object.keys(createInvoice).map(item => {\r\n      data.products.push(createInvoice[item])\r\n    })\r\n    data.userID = invoiceCreatorDetails.id\r\n      ? invoiceCreatorDetails.id\r\n      : userData.id\r\n    data.name =\r\n      userData.type === 'admin'\r\n        ? invoiceCreatorDetails.name\r\n        : userData.user.name\r\n    data.email =\r\n      userData.type === 'admin'\r\n        ? invoiceCreatorDetails.email\r\n        : userData.user.email\r\n    data.created = new Date()\r\n    data.status = 'unattended'\r\n\r\n    const ref = firestore.collection('orders')\r\n    const newOrder = await ref.add(data)\r\n    const fullNewOrder = await ref.doc(newOrder.id).get()\r\n    return fullNewOrder.data()\r\n  }\r\n}\r\nexport const deleteInvoiceData = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'DELETE_INVOICE_DATA',\r\n      data: id\r\n    })\r\n  }\r\n}\r\nexport const GetSingleInvoice = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const singleOrder = await ref.doc(id).get()\r\n    const data = singleOrder.data()\r\n    data.id = id\r\n    return dispatch({\r\n      type: 'GET_SINGLE_INVOICE',\r\n      data\r\n    })\r\n  }\r\n}\r\nexport const setInvoiceStatus = ({ id, state }) => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const foundOrder = await ref.doc(id).update({ state })\r\n    return 'invoiceUpdated'\r\n  }\r\n}\r\n// ** Delete Invoice\r\nexport const deleteInvoice = id => {\r\n  return async dispatch => {\r\n    const ref = firestore.collection('orders')\r\n    const foundOrder = await ref.doc(id).delete()\r\n    return 'orderDeleted'\r\n  }\r\n}\r\n"],"sourceRoot":""}